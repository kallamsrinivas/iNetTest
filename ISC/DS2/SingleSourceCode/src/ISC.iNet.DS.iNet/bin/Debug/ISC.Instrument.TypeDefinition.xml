<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ISC.Instrument.TypeDefinition</name>
    </assembly>
    <members>
        <member name="T:ISC.Instrument.TypeDefinition.VentisProDefinition">
             <summary>
             Type definitions for the Ventis Pro multigas instruments.
             </summary>
             <remarks>
             This instrument type's options are as follows...
             <para>
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Startup">OptionGroup.Startup</see>...
             </para>
             
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>SBUMP</term>  <term/>               <term>On startup, perform bump test</term>      <term/>     </item>
             <item> <term>Boolean</term>  <term>SDAYS</term>  <term/>               <term>View Next/Last Cal or Dock Info on Startup</term><term/></item>
             <item> <term>Boolean</term>  <term>SIA</term>    <term/>               <term>Require iAssign at startup</term>         <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>SZERO</term>  <term/>               <term>On startup, perform zero</term>           <term/>     </item>
             <item> <term>Boolean</term>  <term>SGRCP</term>  <term/>               <term>On startup, show German Compliance screen (only when language is German)</term><term></term></item>    
             <item> <term>Multi</term>    <term>IAW</term>    <term/>               <term>iAssign Warning</term>                    <term>2.0</term></item>
             <item> <term/>               <term/>             <term>IAWD</term>     <term>Disabled</term>                           <term>2.0</term></item>
             <item> <term/>               <term/>             <term>IAWU</term>     <term>User only</term>                          <term>2.0</term></item>
             <item> <term/>               <term/>             <term>IAWS</term>     <term>Site only</term>                          <term>2.0</term></item>
             <item> <term/>               <term/>             <term>IAWUS</term>    <term>User and Site</term>                      <term>2.0</term></item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Operation">OptionGroup.Operation</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>ALLON</term>  <term/>               <term>Always On</term>                          <term/>     </item>    
             <item> <term>Boolean</term>  <term>DAYS</term>   <term/>               <term>View Next/Last Cal or Dock screen</term>  <term/>     </item>
             <item> <term>Boolean</term>  <term>DCUS</term>   <term/>               <term>Enable Company, User, Site screen</term>  <term/>     </item>
             <item> <term>Boolean</term>  <term>DSTEL</term>  <term/>               <term>Enable display of STEL</term>             <term/>     </item>
             <item> <term>Boolean</term>  <term>DTWA</term>   <term/>               <term>Enable display of TWA</term>              <term/>     </item>
             <item> <term>Boolean</term>  <term>FBUMP</term>  <term/>               <term>Can bump in field</term>                  <term/>     </item>
             <item> <term>Boolean</term>  <term>FCAL</term>   <term/>               <term>Can calibrate in field</term>             <term/>     </item>
             <item> <term>Boolean</term>  <term>FCO2Z</term>  <term/>               <term>Can zero CO2 in field</term>              <term>1.10</term></item>
             <item> <term>Boolean</term>  <term>FZERO</term>  <term/>               <term>Can zero in field</term>                  <term/>     </item>    
             <item> <term>Boolean</term>  <term>GIFO</term>   <term/>               <term>Enable Gas Info screen</term>             <term/>     </item>
             <item> <term>Boolean</term>  <term>NFCSU</term>  <term/>               <term>Enable changing user and site via NFC</term><term/>   </item>
             <item> <term>Boolean</term>  <term>PEAKR</term>  <term/>               <term>Enable View Peak readings screen</term>   <term/>     </item>
             </list>
            
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Sensors">OptionGroup.Sensors</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Multi</term>    <term>CALT</term>   <term/>               <term>Calibration type</term>                   <term/>     </item>
             <item> <term/>               <term/>             <term>CAL</term>      <term>Standard calibration</term>               <term/>     </item>
             <item> <term/>               <term/>             <term>QCAL</term>     <term>Quick calibration</term>                  <term/>     </item>
             <item> <term>Boolean</term>  <term>CH4IH</term>  <term/>               <term>Enable CH4 IR High Range</term>           <term/>     </item>
             <item> <term>Multi</term>    <term>DTOXU</term>  <term/>               <term>Toxic sensor units display</term>         <term/>     </item>
             <item> <term/>               <term/>             <term>DPPM</term>     <term>Display PPM</term>                        <term/>     </item>
             <item> <term/>               <term/>             <term>DMGM3</term>    <term>Display mg/M3</term>                      <term/>     </item>
             <item> <term>Multi</term>    <term>LELMR</term>  <term/>               <term>LEL (CH4) Measurement Range</term>        <term/>2.20</item>
             <item> <term/>               <term/>             <term>LEL50</term>    <term>0% to 5.0% (NIOSH)</term>                 <term/>2.20</item>
             <item> <term/>               <term/>             <term>LEL44</term>    <term>0% to 4.4% (IEC)</term>                   <term/>2.20</item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Alarms">OptionGroup.Alarms</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Multi</term>    <term>AI</term>     <term/>               <term>Alarm indicators</term>                   <term/>     </item>
             <item> <term/>               <term/>             <term>AVAB</term>     <term>Visual, audio, and vibrating alarms</term><term/>     </item>
             <item> <term/>               <term/>             <term>AVB</term>      <term>Visual and vibrating alarms</term>        <term/>     </item>
             <item> <term/>               <term/>             <term>AVA</term>      <term>Visual and audio alarms</term>            <term/>     </item>
             <item> <term/>               <term/>             <term>AV</term>       <term>Visual alarms</term>                      <term/>     </item>
             <item> <term>Boolean</term>  <term>ARDOC</term>  <term/>               <term>Allow alarms when docked</term>           <term/>     </item>    
             <item> <term>Boolean</term>  <term>ARSHT</term>  <term/>               <term>Allow shutdown in alarm</term>            <term/>     </item>
             <item> <term>Boolean</term>  <term>FSA</term>    <term/>               <term>Allow Full Screen Alarms</term>           <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>GALRT</term>  <term/>               <term>Enable gas alerts</term>                  <term/>     </item>
             <item> <term>Boolean</term>  <term>LATCH</term>  <term/>               <term>Alarm latching</term>                     <term/>     </item>
             <item> <term>Boolean</term>  <term>OOM</term>    <term/>               <term>Out-of-Motion alarm</term>                <term/>     </item>
             <item> <term>Boolean</term>  <term>PA</term>     <term/>               <term>Allow Proximity Alarms</term>             <term>2.0</term></item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Admin">OptionGroup.Admin</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>   
             <item> <term>Multi</term>    <term>BOD</term>    <term/>               <term>Bump overdue warning</term>               <term/>     </item>
             <item> <term/>               <term/>             <term>BODD</term>     <term>Bump overdue warning disabled</term>      <term/>     </item>
             <item> <term/>               <term/>             <term>BODAU</term>    <term>Audible bump overdue warning</term>       <term/>     </item>
             <item> <term/>               <term/>             <term>BODVS</term>    <term>Visual bump overdue warning</term>        <term/>     </item>
             <item> <term/>               <term/>             <term>BODAL</term>    <term>All bump overdue warnings</term>          <term/>     </item>
             <item> <term>Multi</term>    <term>CALD</term>   <term/>               <term>Calibration days display Mode</term>      <term/>     </item>
             <item> <term/>               <term/>             <term>CALDL</term>    <term>Display days since last calibration</term><term/>     </item>
             <item> <term/>               <term/>             <term>CALDN</term>    <term>Display days until next calibration</term><term/>     </item>  
             <item> <term/>               <term/>             <term>DOCDN</term>    <term>Display days until next dock</term>       <term/>     </item>      
             <item> <term>Multi</term>    <term>CIMOD</term>  <term/>               <term>Confidence indicators</term>              <term/>     </item>
             <item> <term/>               <term/>             <term>CNIND</term>    <term>Confidence indicators disabled</term>     <term/>     </item>
             <item> <term/>               <term/>             <term>CBEEP</term>    <term>Audio confidence indicator</term>         <term/>     </item>
             <item> <term/>               <term/>             <term>CVIS</term>     <term>Visual confidence indicator</term>        <term/>     </item>
             <item> <term/>               <term/>             <term>CALL</term>     <term>All confidence indicators enabled</term>  <term/>     </item>
             <item> <term>Multi</term>    <term>CLKF</term>   <term/>               <term>Clock format</term>                       <term/>     </item>
             <item> <term/>               <term/>             <term>CLK12</term>    <term>12-hour format</term>                     <term/>     </item>
             <item> <term/>               <term/>             <term>CLK24</term>    <term>24-hour format</term>                     <term/>     </item>   
             <item> <term>Multi</term>    <term>COD</term>    <term/>               <term>Calibration overdue warning</term>        <term/>     </item>
             <item> <term/>               <term/>             <term>CODD</term>     <term>Calibration overdue warning disabled</term><term/>    </item>
             <item> <term/>               <term/>             <term>CODAU</term>    <term>Audible calibration overdue warning</term><term/>     </item>
             <item> <term/>               <term/>             <term>CODVS</term>    <term>Visual calibration overdue warning</term> <term/>     </item>
             <item> <term/>               <term/>             <term>CODAL</term>    <term>All calibration overdue warnings</term>   <term/>     </item>
             <item> <term>Multi</term>    <term>DATEF</term>  <term/>               <term>Date format</term>                        <term/>     </item>
             <item> <term/>               <term/>             <term>DDMDY</term>    <term>MM/DD/YY format</term>                    <term/>     </item>
             <item> <term/>               <term/>             <term>DDDMY</term>    <term>DD/MM/YY format</term>                    <term/>     </item>
             <item> <term>Multi</term>    <term>DOD</term>    <term/>               <term>Dock overdue warning</term>               <term/>     </item>
             <item> <term/>               <term/>             <term>DODD</term>     <term>Dock overdue warning disabled</term>      <term/>     </item>
             <item> <term/>               <term/>             <term>DODAU</term>    <term>Audible dock overdue warning</term>       <term/>     </item>
             <item> <term/>               <term/>             <term>DODVS</term>    <term>Visual dock overdue warning</term>        <term/>     </item>
             <item> <term/>               <term/>             <term>DODAL</term>    <term>All dock overdue warnings</term>          <term/>     </item>
             <item> <term>Multi</term>    <term>DTMPU</term>  <term/>               <term>Temperature display units</term>          <term/>     </item>
             <item> <term/>               <term/>             <term>DCELS</term>    <term>Celsius</term>                            <term/>     </item>
             <item> <term/>               <term/>             <term>DFAHR</term>    <term>Fahrenheit</term>                         <term/>     </item>  
             <item> <term>Boolean</term>  <term>NFC</term>    <term/>               <term>Enable NFC</term>                         <term>2.0</term></item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Wireless">OptionGroup.Wireless</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                                   <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>DWL</term>    <term/>               <term>View wireless screen</term>                          <term>2.0</term></item>
             <item> <term>Multi</term>    <term>PAI</term>    <term/>               <term>Wireless peer alarm indicators</term>                <term>2.40</term></item> // LWV Changed from 3.0
             <item> <term/>               <term/>             <term>PAIVA</term>    <term>Visual + Audio</term>                                <term>2.40</term></item> // LWV Changed from 3.0
             <item> <term/>               <term/>             <term>PAIV</term>     <term>Visual</term>                                        <term>2.40</term></item> // LWV Changed from 3.0   
             <item> <term/>               <term/>             <term>PAIA</term>     <term>Audio</term>                                         <term>2.40</term></item> // LWV Changed from 3.0   
             <item> <term/>               <term/>             <term>PAIO</term>     <term>Off</term>                                           <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term>Boolean</term>  <term>WLFU</term>   <term/>               <term>Enable force whisper upload</term>                   <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLHGA</term>   <term/>              <term>Enable wireless "high gas" alarm</term>              <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLLG</term>   <term/>               <term>Enable "leave group" option on wireless screen</term><term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLLGA</term>   <term/>              <term>Enable wireless "low gas" alarm</term>               <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLLP</term>   <term/>               <term>Enable wireless "last peer" alarm</term>             <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLMDA</term>   <term/>              <term>Enable wireless "man-down" alarm</term>              <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLNL</term>   <term/>               <term>Enable wireless "network lost" warning</term>        <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLPA</term>   <term/>               <term>Enable wireless "panic" alarm</term>                 <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLPF</term>   <term/>               <term>Enable pump fault alarm</term>                       <term>2.0</term></item>    
             <item> <term>Boolean</term>  <term>WLPL</term>   <term/>               <term>Enable wireless "peer lost" warning</term>           <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLSA</term>   <term/>               <term>Enable wireless "stel" alarm</term>                  <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLTA</term>   <term/>               <term>Enable wireless "twa" alarm</term>                   <term>2.0</term></item>
             <item> <term>Boolean</term>  <term>WLW</term>   <term/>                <term>Enable wireless warning</term>                       <term>2.20</term></item>
             </list>
            
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.WirelessModule">OptionGroup.WirelessModule</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                                     <term>Versions</term>
             </listheader>    
             <item> <term>Multi</term>    <term>W</term>      <term/>               <term>Wireless</term>                                        <term>2.0</term></item>
             <item> <term/>               <term/>             <term>WO</term>       <term>Off</term>                                             <term>2.0</term></item>
             <item> <term/>               <term/>             <term>WL</term>       <term>Local</term>                                           <term>2.0</term></item>   
             <item> <term/>               <term/>             <term>WLC</term>      <term>Local and Cloud</term>                                 <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term>Boolean</term>  <term>WLCC</term>   <term/>               <term>Enable wireless custom encryption</term>               <term>2.0</term></item> 
             <item> <term>Multi</term>    <term>WLN</term>    <term/>               <term>Wireless network ID (a.k.a. "group")</term>            <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN10</term>    <term>Wireless network ID 10 ("Manual", a.k.a "ad hoc")</term><term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN0</term>     <term>Wireless network ID 0 ("A")</term>                     <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN1</term>     <term>Wireless network ID 1 ("B")</term>                     <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN2</term>     <term>Wireless network ID 2 ("C")</term>                     <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN3</term>     <term>Wireless network ID 3 ("D")</term>                     <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN4</term>     <term>Wireless network ID 4 ("E")</term>                     <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN5</term>     <term>Wireless network ID 5 ("F")</term>                     <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN6</term>     <term>Wireless network ID 6 ("G")</term>                     <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN7</term>     <term>Wireless network ID 7 ("H")</term>                     <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN8</term>     <term>Wireless network ID 8 ("I")</term>                     <term>2.40</term></item> // LWV Changed from 3.0 
             <item> <term/>               <term/>             <term>WLN9</term>     <term>Wireless network ID 9 ("J")</term>                     <term>2.40</term></item> // LWV Changed from 3.0 
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Bluetooth">OptionGroup.Bluetooth</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader> 
             <item> <term>Boolean</term>  <term>BLE</term>    <term/>               <term>Enable bluetooth</term>                   <term>2.0</term></item>
             <item> <term>Multi</term>    <term>BLEM</term>   <term/>               <term>Bluetooth Monitoring</term>               <term>2.0</term></item>
             <item> <term/>               <term/>             <term>BLEO</term>     <term>Off</term>                                <term>2.0</term></item>
             <item> <term/>               <term/>             <term>BLEL</term>     <term>Local (Beacons)</term>                    <term>2.0</term></item>   
             <item> <term/>               <term/>             <term>BLEC</term>     <term>Cloud (iNet Now)</term>                   <term>2.0</term></item>
             <item> <term/>               <term/>             <term>BLELC</term>    <term>Local and Cloud (Beacons and iNet Now)</term><term>2.0</term></item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.iAssign">OptionGroup.iAssign</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>IABT</term>   <term/>               <term>Enable iAssign Beacon Tones</term>        <term>2.0</term></item>    
             <item> <term>Multi</term>    <term>NFCUS</term>  <term/>               <term>Reset NFC entered users/sites upon</term> <term>2.0</term></item>
             <item> <term/>               <term/>             <term>NFCR</term>     <term>Restart</term>                            <term>2.0</term></item>
             <item> <term/>               <term/>             <term>NFCC</term>     <term>Charging</term>                           <term>2.0</term></item>
             <item> <term/>               <term/>             <term>NFCO</term>     <term>Overwrite</term>                          <term>2.0</term></item>    
             <item> <term>Multi</term>    <term>USL</term>    <term/>               <term>User Access Level</term>                  <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USLA</term>     <term>Not restricted</term>                     <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USL9</term>     <term>Least restricted</term>                   <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USL8</term>     <term>Level 8</term>                            <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USL7</term>     <term>Level 7</term>                            <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USL6</term>     <term>Level 6</term>                            <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USL5</term>     <term>Level 5</term>                            <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USL4</term>     <term>Level 4</term>                            <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USL3</term>     <term>Level 3</term>                            <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USL2</term>     <term>Level 2</term>                            <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USL1</term>     <term>Level 1</term>                            <term>2.0</term></item>
             <item> <term/>               <term/>             <term>USL0</term>     <term>Most restricted</term>                    <term>2.0</term></item>    
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Bluetooth">OptionGroup.iNetNow</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader> 
             <item> <term>Boolean</term>  <term>BLECC</term>  <term/>               <term>Enable Sync while Charging</term>      <term>2.20</term></item>
             <item> <term>Multi</term>    <term>INDAT</term>  <term/>               <term>iNet Now Connection Warning</term>     <term>2.40</term></item> // LWV Changed from 3.0
             <item> <term/>               <term/>             <term>INDV</term>     <term>Visual</term>                          <term>2.40</term></item> // LWV Changed from 3.0
             <item> <term/>               <term/>             <term>INDVA</term>    <term>Visual and Audible</term>              <term>2.40</term></item> // LWV Changed from 3.0
             </list>
             
             </remarks>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.VirtualSerialNumber">
            <summary>
            Returns "VIRTUAL".
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED BY ISC.Instrument.Driver.
            NO OTHER SOFTWARE SHOULD USE THIS.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.#ctor(System.String)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.#ctor(System.String,ISC.Instrument.TypeDefinition.EquipmentSubType)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
            <param name="equipmentSubType">The instrument's sub-type.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.IsSupportedByVersion(ISC.Instrument.TypeDefinition.SupportedVersion)">
            <summary>
            </summary>
            <param name="suppportedVersion">
            A SupportedVersion instance that represents the minimum and maximum version numbers 
            to compare to the _softwareVersionCallback
            </param>
            <returns></returns>
            <seealso cref="M:ISC.Instrument.TypeDefinition.InstrumentOption.IsSupportedByVersion(System.String)"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.IsSupportedByVersion(System.String,System.String)">
            <summary>
            </summary>
            <param name="minSoftwareVersion">
            The first software version where the setting was introduced.
            Prior to this version, the setting is not yet supported.
            </param>
            <param name="maxSoftwareVersion">
            The last software version where the setting was available.
            After this version, the settinn is no longer supported.
            </param>
            <returns></returns>
            <seealso cref="M:ISC.Instrument.TypeDefinition.InstrumentOption.IsSupportedByVersion(System.String)"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.IsSupportedByVersion(System.String)">
            <summary>
            </summary>
            <param name="minSoftwareVersion">
            The first software version where the setting was introduced.
            Prior to this version, the setting is not yet supported.
            </param>
            <returns></returns>
            <seealso cref="M:ISC.Instrument.TypeDefinition.InstrumentOption.IsSupportedByVersion(System.String)"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasSensorGasCodeConfigFeature(System.String)">
            <summary>
            Returns whether or not the sensor can be configured to detect different types
            of gases.  For example, changing the response factor of a PID sensor, or correlation
            factor of an LEL sensor.
            <remarks>
            This method should be called before calling the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getSensorGasCode(System.Int32)"/> method.
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setSensorGasCode(System.Int32,System.String)"/>
            should not be called if this method returns false.
            </remarks>
            </summary>
            <param name="sensorCode">One of our standard sensor codes; e.g. "S0019".</param>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getSensorGasCode(System.Int32)"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setSensorGasCode(System.Int32,System.String)"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasSensorCalGasConfigFeature(System.String)">
            <summary>
            Indicates whether or not specified sensor type can have its calibration gas changed.
            </summary>
            <param name="sensorCode">One of our standard sensor codes "S0019" for example.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.getSupportedInstrumentOptions">
            <summary>
            Returns <see cref="T:ISC.Instrument.TypeDefinition.InstrumentOption">InstrumentOptions</see>
            representing all the options that the instrument is capable of supporting.
            </summary>
            <remarks>
            <para>
            The returned options excludes those options that are not supported by the
            version of the instrument specified in the constructor.
            </para>
            <para>
            i.e., for a given type of instrument, the supported options can be
            different depending on what version of firmware the instrument is running.
            </para>
            <para>
            Typically, newer versions of firmware introduce
            new options that older versions do not support.  But occassionally,
            options are taken away too... i.e., an older instrument may support 
            a particular option that is no longer supported by a newer version of
            its firmware.
            </para>
            <para>
            If no software version is specified,then ALL the options that the instrument can
            possibly support are returned.
            </para>
            </remarks>
            <returns>
            The returned Hashtable contains <see cref="T:ISC.Instrument.TypeDefinition.InstrumentOption"/> instances.
            Since InstrumentOption is an abstract class, that means the hashtable will
            contain a mixture of its various subclasses.  It is up to the caller
            to check the type of each returned instance and deal with it accordingly.
            <para>
            The options in the hashtable are keyed on their option code.
            e.g. "CBEEP" for Confidence Beep option.
            </para>
            </returns>
            <seealso cref="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.getSupportedOption(System.String)"/>
            <seealso cref="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.getSupportedProfileOptions"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.getSupportedOption(System.String)">
            <summary>
            Returns an <see cref="T:ISC.Instrument.TypeDefinition.InstrumentOption"/> for the specified option code,
            as long as the instrument supports the specified option.
            Its current enabled state will be undefined.
            </summary>
            <remarks>
            <para>The returned option is free to be toggled by the caller then passed
            back to the driver to actually change it on the instrument.
            </para>
            <para>
            <note>
            The enabled state of
            the returned option is NOT its current state on the instrument. The 
            returned option object is intended to be modified by the caller then
            passed back via a call to something like setInstrumentOption.
            </note>
            </para>
            </remarks>
            <param name="code">Code specifying which option to return.
            e.g. "CBEEP" for Confidence Beep option.</param>
            <returns>
            Since InstrumentOption is an abstract class, that means one of its
            subclasses will be returned.  It is up to the caller
            to check the type of the returned instance and deal with it accordingly.
            <para>
            If the instrument does not support the specified option, then
            a null is returned.
            </para>
            </returns>
            <seealso cref="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.getSupportedInstrumentOptions"/>
            <seealso cref="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.getSupportedProfileOptions"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.getSupportedProfileOptions">
            <summary>
            Returns <see cref="T:ISC.Instrument.TypeDefinition.InstrumentOption">InstrumentOptions</see>
            representing all the options that the instrument's profiles are capable of supporting.
            </summary>
            <remarks>
            <para>
            The returned options excludes those options that are not supported by the
            version of the instrument specified in the constructor.
            </para>
            <para>
            i.e., for a given type of instrument, the supported options can be
            different depending on what version of firmware the instrument is running.
            </para>
            <para>
            Typically, newer versions of firmware introduce
            new options that older versions do not support.  But occassionally,
            options are taken away too... i.e., an older instrument may support 
            a particular option that is no longer supported by a newer version of
            its firmware.
            </para>
            <para>
            If no software version is specified,then ALL the options that the instrument can
            possibly support are returned.
            </para>
            </remarks>
            <returns>
            The returned Hashtable contains <see cref="T:ISC.Instrument.TypeDefinition.InstrumentOption"/> instances.
            Since InstrumentOption is an abstract class, that means the hashtable will
            contain a mixture of its various subclasses.  It is up to the caller
            to check the type of each returned instance and deal with it accordingly.
            <para>
            The options in the hashtable are keyed on their option code.
            e.g. "CBEEP" for Confidence Beep option.
            </para>
            </returns>
            <seealso cref="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.getSupportedInstrumentOptions"/>
            <seealso cref="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.getSupportedOption(System.String)"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.IsVirtualSerialNumber(System.String)">
            <summary>
            Returns true if the passed in serial number string starts with the <see cref="F:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.VirtualSerialNumber">"VIRTUAL"</see> prefix.
            </summary>
            <param name="serialNumber"></param>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.Optioner">
            <summary>
            THIS IS INTENDED TO ONLY BE ACCESSED BY ISC.Instrument.Driver.
            </summary>
            <exclude/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBacklightConfigFeature">
            <summary>
            Indicates whether or not the instrument's backlight can be configured.
            </summary>
            <remarks>
            This should be called to see if the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setBackLightOption(ISC.Instrument.TypeDefinition.BackLightOption)"/>
            can be safely called.
            Some instrument's backlight option cannot be modified as it is hard coded in the instrument.
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setBackLightOption(ISC.Instrument.TypeDefinition.BackLightOption)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BacklightTimeoutSupportedVersion">
            <summary>
            Provides the minimum and maximum version numbers for the Backlight Timeout setting.  Either can be null.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBacklightTimeoutConfigFeature"/> returns false.
            If this feature is supported by all versions, returns SupportedVersion.All.
            </remarks>
            <returns>
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBacklightTimeoutConfigFeature"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBacklightTimeoutConfigFeature">
            <summary>
            Indicates whether or not the instrument's backlight timeout can be configured.
            </summary>
            <remarks>
            This should be called to see if the driver's <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getBacklightTimeout"/>,
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setBacklightTimeout(System.Int32)"/>,
            and <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBacklightTimeout"/> and <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBacklightTimeout"/> can be safely called.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBacklightTimeout"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBacklightTimeout"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBacklightTimeout"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setBacklightTimeout(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBacklightTimeout">
            <summary>
            Returns the instrument's minimum allowed backlight timeout duration, in seconds.
            </summary>
            <remarks>
            Do not call if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBacklightTimeoutConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBacklightTimeoutConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBacklightTimeout"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBacklightTimeout">
            <summary>
            Returns the instrument's maximum allowed backlight timeout duration, in seconds.
            </summary>
            <remarks>
            Do not call if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBacklightTimeoutConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBacklightTimeoutConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBacklightTimeout"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasGasOperationsLogFeature">
            <summary>
            Indicates whether or not the instrument records the gas operations that
            have been performed on it (e.g.., field calibrations and field bumps).
            </summary>
            <remarks>
            If so, they can be can be downloaded via the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getGasOperations"/> method,
            and cleared with its <see cref="M:ISC.Instrument.Driver.InstrumentDriver.clearGasOperations"/> method.
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getGasOperations"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.clearGasOperations"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.GasOperationsLogSupportedVersion">
            <summary>
            Provides the minimum and maximum version numbers for the Gas Operations Log setting.  Either can be null.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasGasOperationsLogFeature"/> returns false.
            If this feature is supported by all versions, returns SupportedVersion.All.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasGasOperationsLogFeature"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBaseInfoLogFeature">
            <summary>
            For area monitors, this indicates whether or not the instrument logs
            the base units that the instrument has been installed in.
            </summary>
            <remarks>
            If so, they can be can be downloaded via the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getBaseUnitInfos"/> method,
            and cleared with its <see cref="M:ISC.Instrument.Driver.InstrumentDriver.clearBaseUnitInfos"/> method.
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBaseUnitInfos"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.clearBaseUnitInfos"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDualSenseFeature">
            <summary>
            Indicates whether or not the instrument type supports DualSense sensors.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasAlarmEventsFeature">
            <summary>
            Indicates whether or not the instrument records gas alarm events.
            </summary>
            <remarks>
            If so, they can be can be downloaded via the driver's getAlarmEvents() method,
            and cleared with its clearAlarmEvents() method.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDataLoggingFeature">
            <summary>
            Indicates whether or not the instrument records datalog data, a.k.a. "hygiene" data.
            </summary>
            <remarks>
            If so, they can be can be downloaded via the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getHygiene"/> method,
            and cleared with its <see cref="M:ISC.Instrument.Driver.InstrumentDriver.clearHygiene"/> method.
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getHygiene"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.clearHygiene"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDataLoggingTempFeature">
            <summary>
            Indicates whether or not the instrument's datalog readings also contain temperature data.
            </summary>
            <remarks>
            <note>
            This property is only called by ISAS. I'm not sure why it's necessary since
            it only returns false for the GBPlus, and that instrument doesn't even
            support datalogging, anyways.  - JMP, 4/2012.
            </note>
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDataLoggingFeature"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.RecordingIntervalIncrement">
            <summary>
            Indicates if the instrument' recording interval may be changed and, if so,
            by what increment.
            </summary>
            <remarks>e.g., sometimes an instrument's recording interval must be 
            in incremements of 1, othertimes it must be 2, etc.</remarks>
            <returns>
            Returned value is a number of seconds. Zero will be returned if the recording interval is not allowed 
            to be modified.  (On some instruments, the recording interval is hard coded.)
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinRecordingInterval"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxRecordingInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinRecordingInterval">
            <summary>
            Returns instrument's minimum allowed recording interval, in minutes.
            </summary>
            <remarks>
            Do no not call if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.RecordingIntervalIncrement"/> returns 0.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.RecordingIntervalIncrement"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxRecordingInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxRecordingInterval">
            <summary>
            Returns the instrument's maximum allowed recording interval, in minutes.
            </summary>
            <remarks>
            Do no not call if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.RecordingIntervalIncrement"/> returns 0.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.RecordingIntervalIncrement"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinRecordingInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasStelFeature">
            <summary>
            Indicates whether or not the instrument supports STEL calculation.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasTwaFeature">
            <summary>
            Indicates whether or not the instrument supports TWA calculation.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTWATimeBase"/>
            and <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setTWATimeBase(System.Int32)"/> methods, 
            and, also, the <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinTwaTimeBase"/> and <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxTwaTimeBase"/> properties.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinTwaTimeBase"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxTwaTimeBase"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTWATimeBase"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setTWATimeBase(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasGasAlertFeature">
            <summary>
            Indicates whether or not the instrument supports gas "alerts".
            This is an alarm for a level of gas that is lower than the low alarm
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getSensorAlarmGasAlert(System.Int32)"/>
            and <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setSensorAlarmGasAlert(System.Int32,System.Double)"/> methods, 
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getSensorAlarmGasAlert(System.Int32)"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setSensorAlarmGasAlert(System.Int32,System.Double)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinTwaTimeBase">
            <summary>
            Returns the instrument's minimum allowed TWA Time Base setting, in hours.
            </summary>
            <remarks>
            Should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasTwaFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasTwaFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxTwaTimeBase"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxTwaTimeBase">
            <summary>
            Returns instrument's maximum allowed TWA Time Base setting, in hours.
            </summary>
            <remarks>
            Should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasTwaFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasTwaFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinTwaTimeBase"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasSmartSensorFeature">
            <summary>
            Indicates whether or not the instrument's sensors are "smart".
            </summary>
            <remarks>
            Instruments with "Smart" sensors are able to return information about those
            sensors such as the sensors' serial numbers, part number, setup date, etc.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasSmartBatteryFeature">
            <summary>
            Indicates whether or not the instrument's batteries are "smart".
            </summary>
            <remarks>
            <para>Instruments with "Smart" batteries are able to return information about those
            batteries such as the batteries' serial numbers, type, part number, etc.
            </para>
            <para>
            This property should called to determine if it's safe to call the driver's methods
            that return battery information.
            </para>
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBatterySerialNumber"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBatteryType"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBatteryPartNumber"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBatterySetupTech"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBatterySetupDate"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBatterySoftwareVersion"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBatteryRunTime"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBatteryInformation"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBatteryInformation">
            <summary>
            Indicates whether or not <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getBatteryType"/>
            can be safely called for this instrument type.
            </summary>
            <remarks>
            While some batteries are not <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasSmartBatteryFeature">"smart batteries"</see>,
            sometimes, minimally, their battery code can be obtained by call to getBatteryType.
            <note>
            This property was added so the MX4, which does not have the smart battery 
            feature, will still display the battery information in ISAS. - RDA 2009-01-26 DLK-368
            </note>
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBatteryType"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasSmartBatteryFeature"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxSensorCapacity">
            <summary>
            Returns the maximum number of sensors that can be installed in the instrument.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasSensorDisablingFeature">
            <summary>
            Indicates whether or not the instrument's sensors can be enabled and disabled
            by the instrument's user.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMagneticFieldDurationFeature">
            <summary>
            Indicates whether or not the instrument supports the "magnetic field duration" setting.
            </summary>
            <remarks>
            This property should be called first to determine if it's safe to call 
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getMagneticFieldDuration"/>,
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>,
            <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinMagneticFieldDuration"/>, and <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxMagneticFieldDuration"/>.
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getMagneticFieldDuration"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinMagneticFieldDuration"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxMagneticFieldDuration"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MagneticFieldDurationSupportedVersion">
            <summary>
            Provides the minimum and maximum version numbers for the Magnetic Field Duration setting.  Either can be null.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMagneticFieldDurationFeature"/> returns false.
            If this feature is supported by all versions, returns SupportedVersion.All.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMagneticFieldDurationFeature"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinMagneticFieldDuration">
            <summary>
            The minimum allowed value allowed for <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>
            </summary>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxMagneticFieldDuration">
            <summary>
            The maximum allowed value allowed for <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>
            </summary>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasCalIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument's calibration interval can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's 
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getCalibrationInterval"/>
            and <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setCalibrationInterval(System.Int16)"/> methods, 
            and, also, <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinCalibrationInterval"/> and <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxCalibrationInterval"/>.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinCalibrationInterval"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxCalibrationInterval"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getCalibrationInterval"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setCalibrationInterval(System.Int16)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinCalibrationInterval">
            <summary>
            Returns the instrument's minimum allowed calibration interval, in days.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasCalIntervalConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasCalIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxCalibrationInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxCalibrationInterval">
            <summary>
            Returns the instrument's maximum allowed calibration interval, in days.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasCalIntervalConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasCalIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinCalibrationInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument's bump interval can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getBumpInterval"/>
            and <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setBumpInterval(System.Double)"/> methods, 
            and, also, <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpInterval"/>, <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpInterval"/>, and <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpIntervalIncrement"/>.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpInterval"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpInterval"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpIntervalIncrement"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBumpInterval"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setBumpInterval(System.Double)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMaintenanceIndicatorIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument's maintenance indicator interval can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getMaintenanceIndicatorInterval"/>
            and <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setMaintenanceIndicatorInterval(System.Int32)"/> methods        
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getMaintenanceIndicatorInterval"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setMaintenanceIndicatorInterval(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's minimum allowed Maintenance Indicator interval, in minutes.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMaintenanceIndicatorIntervalConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMaintenanceIndicatorIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxMaintenanceIndicatorInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's maximum allowed Maintenance Indicator interval, in minutes.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMaintenanceIndicatorIntervalConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMaintenanceIndicatorIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinMaintenanceIndicatorInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpIntervalSupportedVersion">
            <summary>
            Provides the minimum and maximum version numbers for the Bump Interval setting.  Either can be null.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpIntervalConfigFeature"/> returns false.
            If this feature is supported by all versions, returns SupportedVersion.All.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpIntervalConfigFeature"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaintenanceIndicatorIntervalSupportedVersion">
            <summary>
            Provides the minimum and maximum version numbers for the Maintenance Indicator Interval setting.  Either can be null.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMaintenanceIndicatorIntervalConfigFeature"/> returns false.
            If this feature is supported by all versions, returns SupportedVersion.All.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMaintenanceIndicatorIntervalConfigFeature"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.DockIntervalSupportedVersion">
            <summary>
            Provides the minimum and maximum version numbers for the Dock Interval setting.  Either can be null.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDockIntervalConfigFeature"/> returns false.
            If this feature is supported by all versions, returns SupportedVersion.All.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDockIntervalConfigFeature"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBluetoothFeature">
            <summary>
            Indicates whether or not the instrument has bluetooth capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's bluetooth methods.
            e.g. getBluetoothMacAddress, etc.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasWirelessFeature">
            <summary>
            Indicates whether or not the instrument has a wireless capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's bluetooth methods.
            e.g. getWirelessMacAddress, getWirelessTransmissionInterval, etc.
            </remarks>		
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasWirelessTransmissionIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Transmission Interval setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessTransmissionInterval(System.Int32)"/> method. 
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessTransmissionInterval(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasWirelessBindingTimeoutConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Script Binding Timeout setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessBindingTimeout(System.Int32)"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasWirelessNetworkDisconnectDelayConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Network Disconnect Delay Config Feature
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessNetworkDisconnectDelay(System.Int32)"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasWirelessAlarmMaskFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Alarm Mask setting is supported.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getWirelessAlarmMask"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasWirelessListeningPostChannelMaskFeature">
            <summary>
            Indicates whether or not the instrument's Listening Post Channel Mask setting is supported.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getWirelessListeningPostChannelMask"/> and 
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessListeningPostChannelMask(System.UInt16)"/> methods.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasGpsFeature">
            <summary>
            Indicates whether or not the instrument has GPS capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's GPS methods.
            e.g. getGpsReadingInterval, etc.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinGpsReadingInterval"/> 
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxGpsReadingInterval"/> 
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getGpsReadingInterval"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setGpsReadingInterval(System.Int32)"/> 
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinGpsReadingInterval">
            <summary>
            Returns the instrument's minimum allowed GPS reading interval.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasGpsFeature"/> returns false.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxGpsReadingInterval">
            <summary>
            Returns the instrument's maximum allowed GPS reading interval.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasGpsFeature"/> returns false.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpInterval">
            <summary>
            Returns the instrument's minimum allowed bump interval, in days or partial days.
            e.g. 0.5 is returned if minimum interval is every half a day.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpIntervalConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpInterval"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpIntervalIncrement"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpInterval">
            <summary>
            Returns the instrument's maximum allowed bump interval, in days or partial days.
            e.g. 0.5 is returned if maximum interval is every half a day.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpIntervalConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpInterval"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpIntervalIncrement"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpIntervalIncrement">
            <summary>
            Returns by what increment the instrument's bump interval may be changed.
            </summary>
            <remarks>
            <para>
            e.g., sometimes an instrument's bump interval can be 
            in incremements of 1 day, othertimes it must be in half days (0.5), etc.
            </para>
            <para>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpIntervalConfigFeature"/> returns false.
            </para>
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpInterval"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpThresholdConfigFeature">
            <summary>
            Indicates whether or not the instrument's Bump Threshold percentage setting can be changed.
            </summary>
            <remarks>
            <para>
            The bump threshold is the minimum percentage concentration of gas that a sensor must read 
            in order to pass a bump test.  e.g., if gas being used to bump test is 50ppm, and bump 
            threshold setting is 50%, then 25ppm of gas must be read by the sensor in order
            to pass a bump test.
            </para>
            <para>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getBumpThreshold"/>
            and <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setBumpThreshold(System.Int32)"/> methods, 
            and, also, <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpThreshold"/> and <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpThreshold"/>.
            </para>
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpThreshold"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpThreshold"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBumpThreshold"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setBumpThreshold(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpThreshold">
            <summary>
            Returns the instrument's minimum allowed bump threshold.  This is a percentage value.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpThresholdConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpThresholdConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpThreshold"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpThreshold">
            <summary>
            Returns the instrument's maximum allowed bump threshold.  This is a percentage value.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpThresholdConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpThresholdConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpThreshold"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpTimeoutConfigFeature">
            <summary>
            Indicates whether or not the instrument's Bump Timeout setting can be changed.
            </summary>
            <remarks>
            <para>
            The bump timeout setting is the maximum amount of time that the instrument will allow
            a bump test to run before it times out fails the bump test if the test has not yet passed.
            </para>
            <para>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getBumpTimeoutSeconds"/>
            and <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setBumpTimeoutSeconds(System.Int32)"/> methods, 
            and, also, <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpTimeout"/>, <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpTimeout"/>, and <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpTimeoutIntervalIncrement"/>.
            </para>
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpTimeout"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpTimeout"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpTimeoutIntervalIncrement"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getBumpTimeoutSeconds"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setBumpTimeoutSeconds(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpTimeoutSupportedVersion">
            <summary>
            Provides the minimum and maximum version numbers for the Bump Timeout setting.  Either can be null.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpTimeoutConfigFeature"/> returns false.
            If this feature is supported by all versions, returns SupportedVersion.All.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpTimeoutConfigFeature"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpTimeout">
            <summary>
            Returns the instrument's minimum allowed bump timeout, in minutes.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpTimeoutConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpTimeoutConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpTimeout"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpTimeoutIntervalIncrement"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBumpTimeout">
            <summary>
            Returns the instrument's maximum allowed bump timeout, in minutes.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpTimeoutConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpTimeoutConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinBumpTimeout"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpTimeoutIntervalIncrement"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.BumpTimeoutIntervalIncrement">
            <summary>
            If the instrument's Bump Timeout setting may be changed, then this property
            defines by what increment of minutes.
            </summary>
            <remarks>
            <para>
            e.g., sometimes an instrument's bump timeout must be 
            in incremements of 1 minute, othertimes it must be in increments of 5 minutes, etc.
            </para>
            <para>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasBumpTimeoutConfigFeature"/> returns false.
            </para>
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinRecordingInterval"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxRecordingInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasTotalRunTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total runtime.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalRunTime"/> method.
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalRunTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasTotalAlarmTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total alarm time.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/> method.
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxBatteryBarCount">
            <summary>
            Returns the number of battery 'bars' that instrument displays.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxUserCount">
            <summary>
            Return the maximum number of Users the instrument can store.
            <para>
            Zero is returned if the instrument does not support user names.
            </para>
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxSiteCount">
            <summary>
            Return the maximum number of Sites the instrument can store.
            <para>
            Zero is returned if the instrument does not support site names.
            </para>
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxUserLength">
            <summary>
            Returns maximum number of characters allowed for a a user name.
            <para>
            Zero is returned if the instrument does not support user names.
            </para>
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxSiteLength">
            <summary>
            Returns maximum number of characters allowed for a a site name.
            <para>
            Zero is returned if the instrument does not support site names.
            </para>
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxCompanyLength">
            <summary>
            Returns maximum allowed length of the instrument's Active Company field.
            <para>
            Zero is returned if the instrument does not support a company name.
            </para>
            </summary>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getActiveCompany"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setActiveCompany(System.String)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxCompanyMessageLines">
            <summary>
            Returns maximum number of lines that the "company message" can be.
            <para>
            Zero is returned is returned if the instrument does not support "company messages".
            </para>
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxCompanyMessageLineLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxCompanyMessageLineLength">
            <summary>
            Returns the maximum number of characters that each line of the "company message" can be.
            <para>
            Zero if the instrument does not support "company messages".
            </para>
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxCompanyMessageLines"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessages">
            <summary>
            If the instrument is capable of displaying text messages when a particular sensor type goes into alarm,
            then this value indicates the number of these messages that the instrument can store.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessageLines"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessageLineLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessageLines">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of lines of text that are allowed in the message.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessageLineLength"/>
            <exception cref="T:System.NotSupportedException">
            Thrown if this property is called, but instrument does not support alarm messages.
            (To determine if an instrument supports alarm messages, call <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessages"/>
            to see if it returns a non-zero value.)
            </exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessageLineLength">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of characters allowed in each line of text.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessageLines"/>
            <exception cref="T:System.NotSupportedException">
            Thrown if this property is called, but instrument does not support alarm messages.
            (To determine if an instrument supports alarm messages, call <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxAlarmActionMessages"/>
            to see if it returns a non-zero value.)
            </exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.SupportedSecurityCodeTypes">
            <summary>
            Returns bit flags defining the format of the security
            code that the instrument allows.
            </summary>
            <remarks>
            If this property returns <see cref="F:ISC.Instrument.TypeDefinition.SecurityCodeTypes.None"/>,
            then the driver's <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getSecurityCode"/> 
            / <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setSecurityCode(System.String)"/> methods cannot
            be safely called.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinSecurityCodeLength"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxSecurityCodeLength"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.DefaultSecurityCode"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getSecurityCode"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setSecurityCode(System.String)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.DefaultSecurityCode">
            <summary>
            Returns the instrument's default security code.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinSecurityCodeLength"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxSecurityCodeLength"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.DefaultSecurityCode"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinSecurityCodeLength">
            <summary>
            Maximum length (characters/digits) that a security code can be.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxSecurityCodeLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxSecurityCodeLength">
            <summary>
            Minimum length (characters/digits) that a security code can be.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinSecurityCodeLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.SupportedBacklightOptions">
            <summary>
            Returns a list of <see cref="T:ISC.Instrument.TypeDefinition.BackLightOption"> values</see>
            defining the backlight options that this instrument is capable of.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxProfilesCount">
            <summary>
            Returns how many Profiles the instrument can store. Zero if instrument does not support Profiles.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxCustomFactorsCount">
            <summary>
            Returns how many "Custom" PID Response Factors the instrument can store.
            Zero if instrument does not support Custom Response Factors.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxFavoriteFactorsCount">
            <summary>
            Returns how many "Favorite" PID Response Factors the instrument can store.
            Zero if instrument does not support Favorite PID response factors.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.SupportedCountriesOfOrigin">
            <summary>
            Returns the possible "Country of Origins" that the instrument supports.
            An empty array is returned if the instrument does not support the concept of "Country of Origin".
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.SupportedLanguages">
            <summary>
            Returns the languages that the instrument is capable of supporting.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasOomWarningIntervalConfigFeature">
            <summary>
            Indicates if the instrument has an OOM ("Out-of-Motion") warning interval.
            warnings and alarms.
            </summary>
            <remarks>
            This property should be called in order to find out if it's OK to call any of the
            other OOM-related properties and methods.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinOomWarningInterval">
            <summary>
            Returns the instrument's minimum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasOomWarningIntervalConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinOomWarningInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxOomWarningInterval">
            <summary>
            Returns the instrument's maximum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasOomWarningIntervalConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinOomWarningInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDockIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "dock interval" that can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's 
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getDockInterval"/>
            and <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setDockInterval(System.Int32)"/> methods, 
            and, also, <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinDockInterval"/> and <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxDockInterval"/>.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinDockInterval"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxDockInterval"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getDockInterval"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setDockInterval(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinDockInterval">
            <summary>
            Returns the instrument's minimum allowed docking interval, in days.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDockIntervalConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDockIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxDockInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MaxDockInterval">
            <summary>
            Returns the instrument's maximum allowed docking interval, in days.
            </summary>
            <remarks>
            This property should not be called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDockIntervalConfigFeature"/> returns false.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDockIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.MinDockInterval"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.VentisProDefinition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.VentisProDefinition.#ctor(System.String)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.VentisProDefinition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED THE BY InstrumentDriver.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.VentisProDefinition.#ctor(System.String,ISC.Instrument.TypeDefinition.EquipmentSubType)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
            <param name="equipmentSubType">The instrument's sub-type.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.VentisProDefinition.HasSensorGasCodeConfigFeature(System.String)">
            <summary>
            Returns whether or not the sensor can be configured to detect different types
            of gases.  For example, changing the response factor of a PID sensor, or correlation
            factor of an LEL sensor.
            </summary>
            <param name="sensorCode">One of our standard sensor codes; e.g. "S0019".</param>
            <returns>For this instrument type, only returns true for the PID sensor and for
            combustible sensor when it is in LEL mode. False is returned for everything else.</returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.VentisProDefinition.HasSensorCalGasConfigFeature(System.String)">
            <summary>
            Indicates whether or not specified sensor type can have its calibration gas changed.
            </summary>
            <param name="sensorCode">One of our standard sensor codes "S0019" for example.</param>
            <returns>For this instrument type, only returns true for the combustible sensor
            when it's in standard LEL mode.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.IsSupportedInVersion2">
            <summary>
            Returns true or false based on the Ventis Pro firmware version 2.00
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxSensorCapacity">
            <summary>
            Retrieve the number of sensors the instrument is capable of holding.
            </summary>
            <returns>
            For this instrument type, the returned value will be either 4 or 6,
            depending on if the <see cref="T:ISC.Instrument.TypeDefinition.EquipmentSubType"/> is  <see cref="F:ISC.Instrument.TypeDefinition.EquipmentSubType.VentisPro4"/>
            or <see cref="F:ISC.Instrument.TypeDefinition.EquipmentSubType.VentisPro5"/>.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasDualSenseFeature">
            <summary>
            Indicates whether or not the instrument type supports DualSense sensors.
            </summary>
            <returns>Always returns true for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasTotalRunTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total runtime.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalRunTime"/> method.
            </remarks>
            <returns>
            Always returns false for this instrument type.
            </returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalRunTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasTotalAlarmTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total alarm time.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasBacklightConfigFeature">
            <summary>
            Indicates whether or not the instrument's backlight can be configured.
            </summary>
            <remarks>
            This should be called to see if the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setBackLightOption(ISC.Instrument.TypeDefinition.BackLightOption)"/>
            method can be safely called.
            Some instrument's backlight option cannot be modified as it is hard coded in the instrument.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setBackLightOption(ISC.Instrument.TypeDefinition.BackLightOption)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxUserCount">
            <summary>
            </summary>
            <returns>Always returns 1 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxSiteCount">
            <summary>
            </summary>
            <returns>Always returns 1 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxSiteLength">
            <summary>
            </summary>
            <returns>Always returns 16 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxUserLength">
            <summary>
            </summary>
            <returns>Always returns 16 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxCompanyLength">
            <summary>
            Returns maximum allowed length of the instrument's Active Company field.
            </summary>
            <returns>Always returns 16 for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.VentisProDriver.getActiveCompany"/>
            <seealso cref="M:ISC.Instrument.Driver.VentisProDriver.setActiveCompany(System.String)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinBumpInterval">
            <summary>
            </summary>
            <returns>Always returns 0.5 (days) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxBumpInterval">
            <summary>
            </summary>
            <returns>Always returns 30 (days) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.BumpIntervalIncrement">
            <summary>
            </summary>
            <returns>Always returns 0.5 (days) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 50 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 99 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinBumpTimeout">
            <summary>
            </summary>
            <returns>Always returns 30 (seconds) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxBumpTimeout">
            <summary>
            </summary>
            <returns>Always returns 300 (seconds) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.BumpTimeoutIntervalIncrement">
            <summary>
            </summary>
            <returns>Always returns 5 (seconds) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxProfilesCount">
            <summary>
            </summary>
            <returns>Always returns zero for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxCustomFactorsCount">
            <summary>
            </summary>
            <returns>Always returns zero for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxFavoriteFactorsCount">
            <summary>
            </summary>
            <returns>Always returns zero for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasSensorDisablingFeature">
            <summary>
            </summary>
            <returns>Always returns false. Sensors in this instrument type cannot be
            enabled or disabled; they're always enabled</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxBatteryBarCount">
            <summary>
            Return the number of battery bars this instrument has
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasGasOperationsLogFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasBaseInfoLogFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.GasOperationsLogSupportedVersion">
            <summary>
            Always returns <see cref="F:ISC.Instrument.TypeDefinition.SupportedVersion.All"/> for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinRecordingInterval">
            <summary>
            </summary>
            <returns>Always returns 10 for this instrument type. (This instrument type's recording interval cannot be modified.)</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxRecordingInterval">
            <summary>
            </summary>
            <returns>Always returns 10 for this instrument type. (This instrument type's recording interval cannot be modified.)</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.RecordingIntervalIncrement">
            <summary>
            </summary>
            <returns>Always returns zero for this instrument type. (This instrument type's recording interval cannot be modified.)</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinSecurityCodeLength">
            <summary>
            </summary>
            <returns>Always returns 3 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxSecurityCodeLength">
            <summary>
            </summary>
            <returns>Always returns 3 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.DefaultSecurityCode">
            <summary>
            </summary>
            <returns>Always returns "000" for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.SupportedSecurityCodeTypes">
            <summary>
            </summary>
            <returns>Always returns Numeric for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasBacklightTimeoutConfigFeature">
            <summary>
            Indicates whether or not backlight timeout can be configured for the instrument.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinBacklightTimeout">
            <summary>
            Get instrument's minimum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxBacklightTimeout">
            <summary>
            Get instrument's maximum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.SupportedBacklightOptions">
            <summary>
            Returns a list of backlight options that this instrument is capable of.
            </summary>
            <returns>
            The returned list contains <see cref="T:ISC.Instrument.TypeDefinition.BackLightOption"/> enums.
            For this instrument type, the list always only contains <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.Timed"/>.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.SupportedLanguages">
            <summary>
            Returns the languages that the instrument is capable of supporting.
            </summary>
            <returns>If the instrument version is older than 2.0, the returned languages are English, French, German and Spanish. 
            From version 2.10 and above, the languages Polish, Dutch, Italian and Portuguese also supported</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasBluetoothFeature">
            <summary>
            Indicates whether or not the instrument has a bluetooth capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's bluetooth methods.
            e.g. getBluetoothMacAddress, etc.
            Applicable only for version 2.0 and newer, else returns false.
            </remarks>
            <returns>Returns true if instrument version is 2.0 and newer, else returns false.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasWirelessFeature">
            <summary>
            Indicates whether or not the instrument has a wireless capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's wireless methods.
            e.g. getWirelessMacAddress, getWirelessTransmissionInterval, etc.
            Applicable only for version 2.0 and newer, else returns false.
            </remarks>
            <returns>Returns true if instrument version is 2.0 and newer, else returns false.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasWirelessTransmissionIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Transmission Interval setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.VentisProDriver.setWirelessTransmissionInterval(System.Int32)"/> method. 
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.VentisProDriver.setWirelessTransmissionInterval(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasWirelessNetworkDisconnectDelayConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Network Disconnect Delay Config Feature
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.VentisProDriver.setWirelessNetworkDisconnectDelay(System.Int32)"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasWirelessBindingTimeoutConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Script Binding Timeout setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.VentisProDriver.setWirelessBindingTimeout(System.Int32)"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasWirelessAlarmMaskFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Alarm Mask setting is supported
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.VentisProDriver.getWirelessAlarmMask"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasWirelessListeningPostChannelMaskFeature">
            <summary>
            Indicates whether or not the instrument's Listening Post Channel Mask setting is supported.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.VentisProDriver.getWirelessListeningPostChannelMask"/> and 
            <see cref="M:ISC.Instrument.Driver.VentisProDriver.setWirelessListeningPostChannelMask(System.UInt16)"/> methods.
            </remarks>
            <returns>Returns true if firmware is 2.40 or newer. LWV Changed from 3.0</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasGpsFeature">
            <summary>
            Indicates whether or not the instrument has GPS capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's GPS methods.
            e.g. getGpsReadingInterval, etc.
            </remarks>	
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinGpsReadingInterval">
            <summary>
            Returns the instrument's minimum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxGpsReadingInterval">
            <summary>
            Returns the instrument's maximum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxCompanyMessageLines">
            <summary>
            Returns maximum number of lines that the "company message" can be.
            </summary>
            <returns>
            Always returns 3 for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxCompanyMessageLineLength">
            <summary>
            Returns the maximum number of characters that each line of the "company message" can be.
            </summary>
            <returns>
            Always returns 14 for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxAlarmActionMessages">
            <summary>
            If the instrument is capable of displaying text messages when a particular sensor type goes into alarm,
            then this value indicates the number of these messages that the instrument can store.
            </summary>
            <returns>
            <para>Returns 4 for <see cref="F:ISC.Instrument.TypeDefinition.EquipmentSubType.VentisPro4"/> instruments.</para>
            <para>Returns 5 for <see cref="F:ISC.Instrument.TypeDefinition.EquipmentSubType.VentisPro5"/> instruments.</para>
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxAlarmActionMessageLines"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxAlarmActionMessageLineLength"/>
            <exception cref="T:ISC.Instrument.TypeDefinition.TypeDefinitionException">Thrown if the instrument has an invalid <see cref="T:ISC.Instrument.TypeDefinition.EquipmentSubType"/>.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxAlarmActionMessageLines">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of text lines allowed in each message.
            </summary>
            <returns>
            Always returns 1 for this instrument type.
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxAlarmActionMessageLineLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxAlarmActionMessageLineLength">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of characters allowed in each line of a text.
            </summary>
            <returns>
            Always returns 14 for this instrument type.
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxAlarmActionMessageLines"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasOomWarningIntervalConfigFeature">
            <summary>
            Indicates if the instrument has an OOM ("Out-of-Motion") warning interval.
            </summary>
            <returns>
            Always returns true for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinOomWarningInterval">
            <summary>
            Returns the instrument's minimum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinOomWarningInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxOomWarningInterval">
            <summary>
            Returns the instrument's maximum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinOomWarningInterval"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasDockIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "dock interval" that can be changed.
            </summary>
            <returns>
            Always returns true for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinDockInterval">
            <summary>
            Returns the instrument's minimum allowed docking interval, in days.
            </summary>
            <returns>Always returns 1 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxDockInterval">
            <summary>
            Returns the instrument's maximum allowed docking interval, in days.
            </summary>
            <returns>Always returns 365 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.HasMaintenanceIndicatorIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "maintenance indicator interval" that can be changed.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.DockIntervalSupportedVersion">
            <summary>
            Returns the dock interval supported version
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaintenanceIndicatorIntervalSupportedVersion">
            <summary>
            Returns the maintenance indicator interval supported version
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MinMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's minimum allowed maintenace indicator interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.VentisProDefinition.MaxMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's maximum allowed maintenace interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.Mx4Definition">
            <summary>
            Type definitions for the MX4 multigas instruments (iQuad, Ventis, Ventis LS, and Scout).
            </summary>
            <remarks>
            This instrument type's options are as follows...
            <para>
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Operation">OptionGroup.Operation</see>...
            </para>
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>ALLON</term>  <term/>               <term>Always On</term>                          <term>Ventis only, 3.70 and later</term>    </item> 
            <item> <term>Boolean</term>  <term>FBUMP</term>  <term/>               <term>Can bump in field</term>                  <term/>    </item>
            <item> <term>Boolean</term>  <term>FCAL</term>   <term/>               <term>Can calibrate in field</term>             <term/>    </item>
            <item> <term>Boolean</term>  <term>FZERO</term>  <term/>               <term>Can zero in field</term>                  <term/>    </item>
             </list>
             
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Sensors">OptionGroup.Sensors</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>QCAL</term>   <term/>               <term>Allow Quick Cal</term>                    <term/>    </item>
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Alarms">OptionGroup.Alarms</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>ARDOC</term>  <term/>               <term>Allow alarms when docked</term>           <term>Ventis only, 4.0 and later</term>    </item>
            <item> <term>Boolean</term>  <term>ARSHT</term>  <term/>               <term>Allow shutdown in alarm</term>            <term>Ventis only, 4.0 and later</term>    </item>
            <item> <term>Boolean</term>  <term>LATCH</term>  <term/>               <term>Alarm latching</term>                     <term/>    </item>
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Admin">OptionGroup.Admin</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
            </listheader>
            <item> <term>Multi</term>    <term>CIMOD</term>  <term/>               <term>Confidence indicator</term>               <term>All Ventis and Ventis-LS</term>    </item>
            <item> <term/>               <term/>             <term>CBEEP</term>    <term>Audio confidence indicator</term>         <term>All Ventis and Ventis-LS</term>    </item>
            <item> <term/>               <term/>             <term>CVIS</term>     <term>Visual confidence indicator</term>        <term>All Ventis and Ventis-LS</term>    </item>
            <item> <term/>               <term/>             <term>CALL</term>     <term>Both audio and visual indicator</term>    <term>Ventis only, 3.70 and later</term>  </item>
            <item> <term/>               <term/>             <term>CNIND</term>    <term>No confidence indicator</term>            <term>All Ventis and Ventis-LS</term>    </item> 
            <item> <term>Boolean</term>  <term>CINDR</term>  <term/>               <term>Confidence indicator</term>               <term>All iQuads only</term>    </item>  
            </list>
            <note>CINDR option exists only in v1.xx (iQuad) instruments. It was replaced in Ventis by CIMOD option.</note>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.None">OptionGroup.None</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
            </listheader>
            <item> <term>Multi</term>    <term>DPMOD</term>  <term/>               <term>Display modes</term>                      <term/>    </item>
            <item> <term/>               <term/>             <term>DTXT</term>     <term>Display text</term>                       <term/>    </item>
            <item> <term/>               <term/>             <term>DNUM</term>     <term>Display is numeric</term>                 <term/>    </item>     
            <item> <term>Boolean</term>  <term>CALDU</term>  <term/>               <term>Enable Calibration Past Due warning</term><term/>    </item>
            <item> <term>Boolean</term>  <term>BMPDU</term>  <term/>               <term>Enable Bump Past Due warningn</term>      <term/>    </item>   
            <item> <term>Multi</term>    <term>CALD</term>   <term/>               <term>Calibration Display Mode</term>           <term>Ventis only, 3.70 and later</term>   </item>
            <item> <term/>               <term/>             <term>CALDL</term>    <term>Display days since last calibration</term><term>Ventis only, 3.70 and later</term>    </item>
            <item> <term/>               <term/>             <term>CALDN</term>    <term>Display days until next calibration</term><term>Ventis only, 3.70 and later</term>    </item>  
            </list>
            </remarks>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx4Definition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx4Definition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED THE BY InstrumentDriver.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx4Definition.#ctor(System.String)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx4Definition.HasSensorGasCodeConfigFeature(System.String)">
            <summary>
            Returns whether or not the sensor can be configured to detect different types
            of gases.  For example, changing the response factor of a PID sensor, or correlation
            factor of an LEL sensor.
            </summary>
            <param name="sensorCode">One of our standard sensor codes; e.g. "S0019".</param>
            <returns>Always returns false.</returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx4Definition.HasSensorCalGasConfigFeature(System.String)">
            <summary>
            Indicates whether or not specified sensor type can have its calibration gas changed.
            </summary>
            <param name="sensorCode">One of our standard sensor codes "S0019" for example.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx4Definition.GetSupportedLanguages">
            <summary>
            A helper method for the public SupportedLanguages property, this method returns the languages that the instrument is capable of supporting.  
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxSensorCapacity">
            <summary>
            Retrieve the number of sensors the instrument is capable of holding.
            </summary>
            <returns>Sensor capacity</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasDualSenseFeature">
            <summary>
            Indicates whether or not the instrument type supports DualSense sensors.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasTotalRunTimeFeature">
            <summary>
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasTotalAlarmTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total alarm time.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasBacklightConfigFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxCompanyLength">
            <summary>
            Returns maximum allowed length of the instrument's Active Company field.
            </summary>
            <returns>
            This instrument type does not have an Active Company field,
            so this property always returns zero.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MinBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 50 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 99 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasSensorDisablingFeature">
            <summary>
            </summary>
            <returns>Always returns false. Sensors in this instrument type cannot be
            enabled or disabled; they're always enabled</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxBatteryBarCount">
            <summary>
            Return the number of battery bars this instrument has
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasGasOperationsLogFeature">
            <summary>
            Returns true if the instrument is a Ventis (i.e, not iQuad, Scout, or VentisLS), and is running 3.70 or later firmware.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasAlarmEventsFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasDataLoggingFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasDataLoggingTempFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasBaseInfoLogFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasBacklightTimeoutConfigFeature">
            <summary>
            Indicates whether or not backlight timeout can be configured for the instrument.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MinBacklightTimeout">
            <summary>
            Get instrument's minimum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxBacklightTimeout">
            <summary>
            Get instrument's maximum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.SupportedBacklightOptions">
            <summary>
            Returns a list of backlight options that this instrument is capable of.
            </summary>
            <returns>
            The returned list contains <see cref="T:ISC.Instrument.TypeDefinition.BackLightOption"/> enums.
            For this instrument type, the list always only contains <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.Timed"/>.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.SupportedLanguages">
            <summary>
            Returns the languages that the instrument is capable of supporting.
            </summary>
            <returns>
            For iQuad instruments, the returned array is always empty.
            <para>
            For other MX4 instrument types, the returned languages are always English, French, German, and Spanish.
            </para>
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasBluetoothFeature">
            <summary>
            Indicates whether or not the instrument has a bluetooth capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's bluetooth methods.
            e.g. getBluetoothMacAddress, etc.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasWirelessFeature">
            <summary>
            Indicates whether or not the instrument has a wireless capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's wireless methods.
            e.g. getWirelessMacAddress, getWirelessTransmissionInterval, etc.
            </remarks>
            <returns>Only returns true for Ventis LS instruments.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasWirelessTransmissionIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Transmission Interval setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.Mx4Driver.setWirelessTransmissionInterval(System.Int32)"/> method. 
            </remarks>
            <returns>Always returns false for this instrument type. The Ventis-LS' wireless transmission interval is a factory-only setting.</returns>
            <seealso cref="M:ISC.Instrument.Driver.Mx4Driver.setWirelessTransmissionInterval(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasWirelessNetworkDisconnectDelayConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Network Disconnect Delay Config Feature
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessNetworkDisconnectDelay(System.Int32)"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasWirelessBindingTimeoutConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Script Binding Timeout setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessBindingTimeout(System.Int32)"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasWirelessAlarmMaskFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Alarm Mask setting is supported
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getWirelessAlarmMask"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasWirelessListeningPostChannelMaskFeature">
            <summary>
            Indicates whether or not the instrument's Listening Post Channel Mask setting is supported.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasGpsFeature">
            <summary>
            Indicates whether or not the instrument has GPS capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's GPS methods.
            e.g. getGpsReadingInterval, etc.
            </remarks>	
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MinGpsReadingInterval">
            <summary>
            Returns the instrument's minimum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxGpsReadingInterval">
            <summary>
            Returns the instrument's maximum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxCompanyMessageLines">
            <summary>
            Returns maximum number of lines that the "company message" can be.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxCompanyMessageLineLength">
            <summary>
            Returns the maximum number of characters that each line of the "company message" can be.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxAlarmActionMessages">
            <summary>
            If the instrument is capable of displaying text messages when a particular sensor type goes into alarm,
            then this value indicates the number of these messages that the instrument can store.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxAlarmActionMessageLines"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxAlarmActionMessageLineLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxAlarmActionMessageLines">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of text lines allowed in each message.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxAlarmActionMessageLineLength"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception> 
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxAlarmActionMessageLineLength">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of characters allowed in each line of a text.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxAlarmActionMessageLines"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasOomWarningIntervalConfigFeature">
            <summary>
            Indicates if the instrument has an OOM ("Out-of-Motion") warning interval.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MinOomWarningInterval">
            <summary>
            Returns the instrument's minimum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx4Definition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxOomWarningInterval">
            <summary>
            Returns the instrument's maximum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx4Definition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasDockIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "dock interval" that can be changed.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MinDockInterval">
            <summary>
            Returns the instrument's minimum allowed docking interval, in days.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxDockInterval">
            <summary>
            Returns the instrument's maximum allowed docking interval, in days.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.HasMaintenanceIndicatorIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "maintenance indicator interval" that can be changed.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MinMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's minimum allowed maintenace indicator interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx4Definition.MaxMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's maximum allowed maintenace interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.InstrumentMultiOption">
            <summary>
            <para>Represents an instrument option that has multiple choices.
            At least one of the choices must be specified.
            </para>
            <para>An example is the MX6 "Clock display" option which has three settings... 
            The MX6 instrument  can be configured so that it displays the current time,
            or it displays the current temperature, or it displays both.
            </para>
            <para>InstrumentMultiOptions have what are considered "sub-options"... 
            each of its multiple settings are considered a sub-option and are
            represented as a BooleanOption.  
            If one sub-option is enabled, the other sub-options are automatically
            disabled.  
            </para>
            </summary>
            <seealso cref="T:ISC.Instrument.TypeDefinition.InstrumentMultiOption.SubOptionInfo"/>
            <seealso cref="T:ISC.Instrument.TypeDefinition.InstrumentBooleanOption"/>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.InstrumentOption">
             <summary>
             Represents a setting on the instrument that the user can enable or disable,
             or toggle one way versus another way.
             </summary>
             <remarks>
             <para>An "instrument option" is a setting on the instrument that the user can enable 
             or disable, or toggle one way versus another way.
             </para>
             <para>Common examples are turning datalogging on or off, or turning the vibrating alarm
             on or off, or choosing a numeric versus text display, etc.  This InstumentOption class,
             and its two subclasses, InstrumentMultiOption and InstrumentBooleanOption exist to
             represent this concent.
             </para>
             <para>This class exists because we ran into a development problem such that
             each instrument type's options are often so vastly different, that it's not practicle
             to add specific methods to the InstrumentDriver for every single possible option.
             It becomes too unwieldly to maintain, and it's also too cumbersome for programs that
             call the driverdriver, too.  There's also the problem that the DataLink softare isn't
             coded to know ahead of time what options a particular type of instrument has.
             At runtime, it asks the driver for a list of what options the instrument supports
             (getSupportedInstrumentOptions), and then constructs its user interface to present
             the options that the driver returns.
             </para>
             <para>Each InstrumentOption has a string code designating what the option is.
             (e.g. "CBEEP" for Confidence Beep option.)  It also knows what modbus registers
             are used to set the option one way or another on the instrument, and what the
             values in those registers needs to be.  
             Usually (and preferably) the options are toggled by setting/clearing a particular
             bit in a particular modbus register.
             </para>
             <para>During the driver instantiation, a list (hashtable) of InstrumentOptions is
             constructed.  InstrumentOptions is an abstract class with two subclasses, 
             InstrumentBooleanOption and InstrumentMultiOption.  So that means the hashtable 
             is really a mixed collection of InstrumentBooleanOptions and InstrumentMultiOptions.  
             Once the driver sets up the hashtable, a user of the driver can then find out what
             options the instrument supports (getInstrumentSupportedOptions) and also set the 
             options as needed.
             </para>
             <example>
             If a piece of software wanted to turn on the instrument's confidence
             beep option, it could do the following....
             <code>
             InstrumentBooleanOption boolOption = (InstrumentBooleanOption)driver.getInstrumentOption( "CINDR" );
             
             boolOption.Enabled = true;
            
             Driver.setInstrumentOption( boolOption );
             </code>
             </example>
             </remarks>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentOption.#ctor(System.String,ISC.Instrument.TypeDefinition.OptionGroup,ISC.Instrument.TypeDefinition.SupportedVersion,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="code">The DS2/iNet code for the option.
            It works as a unique identifier for the option.
            (e.g. "CBEEP" for confidence beep option.)</param>
            <param name="supportedVersion"></param>
            Indicates the earliest and last software versions of 
            the instrument that the option is supported in.
            <para>
            Some options are only supported by later versions of 
            instrument firmware, and not earlier versions.
            </para>
            <para>
            Some options are only supported by newer versions of 
            instrument firmware, but not later. 
            </para>
            <param name="displayName">A brief description of the option.
            Used for debugging purposes, only.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentOption.IsSupportedByVersion(System.String)">
            <summary>
            Indicates if this option is supported by the specified
            firmware version of the instrument.
            </summary>
            <param name="version">If empty, then the return value is always true.</param>
            <returns>True if the option is supported for the specified version, or the specified version is empty.
            Otherwise, false is returned.</returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentOption.Clone">
            <summary>
            Makes a deep clone of this InstrumentOption
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentOption.CopyTo(ISC.Instrument.TypeDefinition.InstrumentOption)">
            <summary>
            Makes copies of reference-type members. This is a helper method for Cloning.
            </summary>
            <param name="option"></param>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentOption.Code">
            <summary>
            Returns the identifiying DS2/iNet code for this option.
            (e.g. "CBEEP" for confidence beep option.)
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentOption.DisplayName">
            <summary>
            A brief description of the option. e.g. ""Confidence Indicator".
            To be used only for debugging or logging purposes (to remind developers what the option does)
            not to be displayed by any application to its users.
            </summary>
            <remarks>
            Any applications using the InstrumentOption classes should not use this field
            (i.e., should not display it).
            or should at least assume that the text that this property returns
            any particular option is subject to change at any time, without notice.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentOption.SupportedVersions">
            <summary>
            Gets a copy of the list of the supported versions.
            </summary>
            <remarks>
            Usually this list will be empty or have one record.
            The list could have multiple records if different generations of an instrument 
            (such as Ventis and Ventis LS) have each had the same option added.
            </remarks>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentMultiOption.RemoveSubOption(System.String)">
            <summary>
            Allows the removal of a suboption. The "Optioner" needs to do this to
            handle instruments of a given type that support different options
            based on what version of software they have.  The driver wants to
            remove any suboption that the instrument software doesn't support.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentMultiOption.GetSubOptionInfoByCode(System.String)">
            <summary>
            Get a specific SubOptionInfo object from this multi-option.
            rgilmore 06Jul2006: Used by DataLink
            </summary>
            <param name="code">Code of the sub-option to return.</param>
            <returns></returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentMultiOption.ToString">
            <summary>
            Returned format is "Code=EnabledCode"
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentMultiOption.CopyTo(ISC.Instrument.TypeDefinition.InstrumentOption)">
            <summary>
            Makes copies of reference-type members. This is a helper method for Cloning.
            </summary>
            <param name="option"></param>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentMultiOption.EnabledCode">
            <summary>
            Enable the specified sub-option or return the currently enabled sub-option.
            Unlike InstrumentBooleanOptions, this InstrumentMultiOption cannot be "disabled";
            at least one sub-option must be enabled.
            When a specified sub-option is Enabled, then all other sub-options
            set are automatically disabled.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If caller specifies a code
            that is not one of this MultiOption's subcodes.
            </exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentMultiOption.SubOptions">
            <summary>
            Returns all the sub-options.
            Any of the codes in the returned list can be used to set the
            <see cref="P:ISC.Instrument.TypeDefinition.InstrumentMultiOption.EnabledCode"/> property.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentMultiOption.SubBooleanOptions">
            <summary>
            FOR INTERNAL DRIVER USE ONLY!
            RETURNS THE ACTUAL BooleanOptions FOR THIS MULTIOPTION.
            NON-DRIVER CALLERS SHOULD/MUST USE SUBOPTIONS PROPERTY INSTEAD.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentMultiOption.RegisterType">
            <summary>
            FOR INTERNAL DRIVER USE ONLY!  APPLICATIONS SHOULD NOT CALL THIS.
            </summary>
            <exclude/>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.InstrumentMultiOption.SubOptionInfo">
            <summary>
            Contains information about the sub-options that an <see cref="T:ISC.Instrument.TypeDefinition.InstrumentMultiOption"/> has.
            </summary>
            <remarks>
            An <see cref="T:ISC.Instrument.TypeDefinition.InstrumentMultiOption">InstrumentMultiOption's</see>
            list of SubOptionInfos can be obtained by calling
            its <see cref="P:ISC.Instrument.TypeDefinition.InstrumentMultiOption.SubOptions"/> property.
            </remarks>
            <seealso cref="P:ISC.Instrument.TypeDefinition.InstrumentMultiOption.SubOptions"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentMultiOption.SubOptionInfo.DisplayName">
            <summary>
            A brief description of the option. e.g. ""Visual alarm only".
            To be used only for debugging or logging purposes (to remind developers what the option does)
            not to be displayed by any application to its users.
            </summary>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.InstrumentBooleanOption">
            <summary>
            An InstrumentBooleanOption is an instrument option with a simple
            "true/false", i.e., "yes/no", i.e., "enabled/disabled" setting.
            Hence the name "Boolean".
            </summary>
            <seealso cref="T:ISC.Instrument.TypeDefinition.InstrumentMultiOption"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentBooleanOption.ToString">
            <summary>
            Format is "Code=Enabled"
            </summary>
            <returns></returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentBooleanOption.CopyTo(ISC.Instrument.TypeDefinition.InstrumentOption)">
            <summary>
            Makes copies of reference-type members. This is a helper method for Cloning.
            </summary>
            <param name="option"></param>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentBooleanOption.Enabled">
            <summary>
            Enable or disable this option.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentBooleanOption.Registers">
            <summary>
            THIS PROPERTY IS INTENDED TO ONLY BE ACCESSED INTERNALLY BY THE INSTRUMENT DRIVER.
            NO OTHER SOFTWARE SHOULD USE THIS.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentBooleanOption.Register.#ctor(System.UInt16,System.UInt16,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="registerNum"></param>
            <param name="registerBit"></param>
            <param name="bitOffEnabled">If true, then option is considered to be Enabled
            if the required bit is Off.  And is Disabled if the bit is On.
            </param>
            <seealso cref="T:ISC.Instrument.TypeDefinition.InstrumentMultiOption"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.InstrumentBooleanOption.Register.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentBooleanOption.Register.Num">
            <summary>
            The modbus register number.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentBooleanOption.Register.Bit">
            <summary>
            The register bit to set/clear to toggle this option.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.InstrumentBooleanOption.Register.IsBitOffEnabled">
            <summary>
            Indicates if bit needs to be set to enable the option (false)
            or cleared to enable the option (true).
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.DummyDefinition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.DummyDefinition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED BY THE InstrumentDriver.
            </summary>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.DummyDefinition.HasSensorGasCodeConfigFeature(System.String)">
            <summary>
            Returns whether or not the sensor can be configured to detect different types
            of gases.  For example, changing the response factor of a PID sensor, or correlation
            factor of an LEL sensor.
            </summary>
            <param name="sensorCode">One of our standard sensor codes; e.g. "S0019".</param>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.DummyDefinition.HasBacklightTimeoutConfigFeature">
            <summary>
            Indicates whether or not backlight timeout can be configured for the instrument.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.DummyDefinition.SupportedSecurityCodeTypes">
            <summary>
            Returns type of security code (none, numeric, alphanumeric, etc.).
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.DummyDefinition.MinSecurityCodeLength">
            <summary>
            Returns the minimum length allowed for a security code.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.DummyDefinition.MaxSecurityCodeLength">
            <summary>
            Returns the maximum length allowed for a security code.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.DummyDefinition.DefaultSecurityCode">
            <summary>
            Returns the default security code.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.DummyDefinition.SupportedLanguages">
            <summary>
            Returns the languages that the instrument is capable of supporting.
            </summary>
            <returns>The languages returned may vary depending on software version of the instrument.
            If the instrument supports no language setting, then an empty array will returned.
            </returns>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.Mx6Definition">
             <summary>
             For use with the MX6 iBrid instrument.
             </summary>
             <remarks>
             This instrument type's options are as follows...
             <para>
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Startup">OptionGroup.Startup</see>...
             </para>
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                               <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>SZERO</term>  <term/>               <term>On startup, perform zero</term>                  <term/>    </item>
             <item> <term>Boolean</term>  <term>SBUMP</term>  <term/>               <term>On startup, perform bump test</term>             <term/>    </item>
             </list>
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Operation">OptionGroup.Operation</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                               <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>FBUMP*</term>  <term/>               <term>Allow field bump tests</term>                   <term>4.10 and newer</term>    </item>
             <item> <term>Boolean</term>  <term>FZERO</term>  <term/>               <term>Allow field zeroing</term>                       <term/>    </item>
             <item> <term>Boolean</term>  <term>FCAL</term>   <term/>               <term>Allow field calibrating</term>                   <term/>    </item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Alarms">OptionGroup.Alarms</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                               <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>ABEEP</term>  <term/>               <term>Audio alarm</term>                               <term/>    </item>
             <item> <term>Boolean</term>  <term>ARDOC*</term> <term/>               <term>Allow alarms when docked</term>                  <term>4.10 and newer</term>    </item>
             <item> <term>Boolean</term>  <term>ARSHT*</term> <term/>               <term>Allow shutdown in alarm</term>                   <term>4.10 and newer</term>    </item>
             <item> <term>Boolean</term>  <term>AVIB</term>   <term/>               <term>Vibrating alarm</term>                           <term/>    </item>
             <item> <term>Boolean</term>  <term>AVIS</term>   <term/>               <term>Visual alarm</term>                              <term/>    </item> 
             <item> <term>Boolean</term>  <term>LATCH</term>  <term/>               <term>Alarm latching</term>                            <term/>    </item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Admin">OptionGroup.Admin</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                               <term>Versions</term>
             </listheader>
             <item> <term>Multi</term>    <term>BOD</term>  <term/>                 <term>Bump overdue warning</term>                      <term>3.50 and newer</term>    </item>
             <item> <term/>               <term/>             <term>BODC</term>     <term>None (continue)</term>                           <term>3.50 and newer</term>    </item>
             <item> <term/>               <term/>             <term>BODNC</term>    <term>Diplay notification then continue</term>         <term>3.50 and newer</term>    </item>
             <item> <term/>               <term/>             <term>BODVS</term>    <term>Display warning and visual indicator</term>      <term>3.50 and newer</term>    </item>
             <item> <term/>               <term/>             <term>BODAU</term>    <term>Display warning and audio indicator</term>       <term>3.50 and newer</term>    </item>
             <item> <term/>               <term/>             <term>BODAL</term>    <term>Display warning all indicators</term>            <term>3.50 and newer</term>    </item>
             <item> <term>Boolean</term>  <term>CBEEP</term>  <term/>               <term>Audio confidence indicator</term>                <term/>    </item>
             <item> <term>Boolean</term>  <term>CLK24</term>  <term/>               <term>24 hour clock display</term>                     <term/>    </item>
             <item> <term>Boolean</term>  <term>CVIB</term>   <term/>               <term>Vibrating confidence indicator</term>            <term/>    </item>
             <item> <term>Boolean</term>  <term>CVIS</term>   <term/>               <term>Visual confidence indicator</term>               <term/>    </item>
             <item> <term>Multi</term>    <term>COD</term>  <term/>                 <term>Calibration overdue warning</term>               <term/>    </item>
             <item> <term/>               <term/>             <term>CODC</term>     <term>Cal overdue, Continue</term>                     <term/>    </item>
             <item> <term/>               <term/>             <term>CODNC</term>    <term>Cal overdue, Notify and continue</term>          <term/>    </item>
             <item> <term/>               <term/>             <term>CODH</term>     <term>Cal overdue, Turn off instrument</term>          <term/>    </item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.None">OptionGroup.None</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                               <term>Versions</term>
             </listheader>   
             <item> <term>Boolean</term>  <term>SSTST</term>  <term/>               <term>On startup, perform self-test</term>             <term/>    </item>
             <item> <term>Boolean</term>  <term>SDUSR</term>  <term/>               <term>On startup, view user</term>                     <term/>    </item>
             <item> <term>Boolean</term>  <term>SDCOM</term>  <term/>               <term>On startup, view company</term>                  <term/>    </item>
             <item> <term>Boolean</term>  <term>SCAL</term>   <term/>               <term>Startup Calibration date mode</term>             <term/>    </item>
             <item> <term>Boolean</term>  <term>ROTAT</term>  <term/>               <term>Rotate display 180 degrees</term>                <term/>    </item>
             <item> <term>Boolean</term>  <term>FEPID</term>  <term/>               <term>Allow field editing of PID factors</term>        <term/>    </item>
             <item> <term>Boolean</term>  <term>FPEAK</term>  <term/>               <term>Allow field clearing of peaks</term>             <term/>    </item>
             <item> <term>Boolean</term>  <term>FELEL</term>  <term/>               <term>Allow field editing of LEL correlation factors</term><term/>    </item>
             <item> <term>Boolean</term>  <term>FEUSR</term>  <term/>               <term>Allow field editing of user</term>               <term/>    </item>
             <item> <term>Boolean</term>  <term>FEST</term>   <term/>               <term>Allow field editing of site</term>               <term/>    </item>
             <item> <term>Boolean</term>  <term>OWRIT</term>  <term/>               <term>Overwite datalog</term>                          <term/>    </item>
             <item> <term>Boolean</term>  <term>FHYGN</term>  <term/>               <term>Allow field viewing of datalog</term>            <term/>    </item>
             <item> <term>Boolean</term>  <term>FEVNT</term>  <term/>               <term>Allow field viewing of event log</term>          <term/>    </item>
             
             <item> <term>Multi</term>    <term>SCALM</term>  <term/>               <term>Startup Calibration Display Mode</term>          <term/>    </item>
             <item> <term/>               <term/>             <term>LCALA</term>    <term>Display last calibration</term>                  <term/>    </item>
             <item> <term/>               <term/>             <term>LCALB</term>    <term>Display next calibration</term>                  <term/>    </item>
             
             <item> <term>Multi</term>    <term>CALD</term>   <term/>               <term>Calibration Display Mode</term>                  <term>3.50 and newer</term>    </item>
             <item> <term/>               <term/>             <term>CALDL</term>    <term>Display Last Calibration date</term>             <term>3.50 and newer</term>    </item>
             <item> <term/>               <term/>             <term>CALDN</term>    <term>Display Calibration Due date</term>              <term>3.50 and newer</term>    </item>
             
             <item> <term>Multi</term>    <term>DLMOD</term>  <term/>               <term>Calibration Display Mode</term>                  <term/>    </item>
             <item> <term/>               <term/>             <term>DL</term>       <term>Datalogging only</term>                          <term/>    </item>
             <item> <term/>               <term/>             <term>ELOG</term>     <term>Datalog on alarm enabled</term>                  <term/>    </item>
             <item> <term/>               <term/>             <term>SNAP</term>     <term>Datalog snapshot enabled</term>                  <term/>    </item>
            
             <item> <term>Multi</term>    <term>DPMOD</term>  <term/>               <term>Readings display mode</term>                     <term/>    </item>
             <item> <term/>               <term/>             <term>DTXT</term>     <term>Display is text</term>                           <term/>    </item>
             <item> <term/>               <term/>             <term>DNUM</term>     <term>Display is numeric</term>                        <term/>    </item>
             <item> <term/>               <term/>             <term>GRAPH</term>    <term>Display is graphical</term>                      <term/>    </item>
             
             <item> <term>Multi</term>    <term>CKMOD</term>  <term/>               <term>Clock display mode</term>                        <term/>    </item>
             <item> <term/>               <term/>             <term>CLOCK</term>    <term>Display clock</term>                             <term/>    </item>
             <item> <term/>               <term/>             <term>TEMP</term>     <term>Display temperature</term>                       <term/>    </item>
             <item> <term/>               <term/>             <term>CLKTP</term>    <term>Display clock and temperature</term>             <term/>    </item>
              
             <item> <term>Multi</term>    <term>PLMOD</term>  <term/>               <term>PID LEL factors mode</term>                      <term/>    </item>
             <item> <term/>               <term/>             <term>DPID</term>     <term>Display PID Factors</term>                       <term/>    </item>
             <item> <term/>               <term/>             <term>DLEL</term>     <term>Display LEL Correlation Factors</term>           <term/>    </item>
             <item> <term/>               <term/>             <term>DPDLL</term>    <term>Display both PID and LEL Factors</term>          <term/>    </item>
            
             </list>
             <note>
             * Note that all options listed above are also in the MX6's profiles, except for the following: ARSHT, ARDOC, and FBUMP,
             which are "main" instrument options only.
             </note>
             <note>
             Note that as of v3.50, the SCAL option affects the new SCALM option: SCALM setting is ignored by instrument if SCAL option is disabled.
             </note>
             </remarks>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.Mx6Definition.PROFILE_POS_FACTORY">
            <summary>
            Position number of the factory profile.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx6Definition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx6Definition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED THE BY InstrumentDriver.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx6Definition.#ctor(System.String)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx6Definition.HasSensorGasCodeConfigFeature(System.String)">
            <summary>
            Returns whether or not the sensor can be configured to detect different types
            of gases.  For example, changing the response factor of a PID sensor, or correlation
            factor of an LEL sensor.
            </summary>
            <remarks>
            <para>
            The following are Jeff Martin's 1/6/2011 comments regarding changing the LEL mode
            which we do not currently support...
            </para>
            <para>
            "The LEL sensor gas code can be written via Modbus, using register 103 (actually,
            203 since the LEL is in position 2). The instrument doesn't really use this value
            for anything, though - for example, setting this to Methane won't change the LEL
            sensor readings from %LEL to %Vol or anything. Instead, there is a Modbus register 
            called Instrument LEL Mode (register 2941) that does this - a value of 1 for 
            %LEL mode, and a value of 2 for %Vol mode.
            </para>
            <para>
            It's actually a little more confusing than that, because the LEL sensor stores 
            2 different sets of values - one for %LEL mode, and one for %vol mode. In %LEL mode,
            there are several different gas types that we can typically use (pentane,
            xylene, ???) - but in %vol mode on the MX4, only methane should be used. If you want
            to allow a write to the gas type value, it may be a good idea to make sure the
            sensor is in %LEL mode first by reading register 2941. Or it might just be easier
            to leave it the way it is, and not allow the writes at all."
            </para>
            </remarks>
            <param name="sensorCode">One of our standard sensor codes; e.g. "S0019".</param>
            <returns>Returns true if sensorCode is PID, Combustible LEL, or Combustible PPM; Otherwise, false.</returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Mx6Definition.HasSensorCalGasConfigFeature(System.String)">
            <summary>
            Indicates whether or not specified sensor type can have its calibration gas changed.
            </summary>
            <param name="sensorCode">One of our standard sensor codes "S0019" for example.</param>
            <returns>Returns true if sensorCode is PID, Combustible LEL, or Combustible PPM; Otherwise, false.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxSensorCapacity">
            <summary>
            Returns now many sensors this instrument can
            have installed at one time.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasDualSenseFeature">
            <summary>
            Indicates whether or not the instrument type supports DualSense sensors.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasTotalRunTimeFeature">
            <summary>
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasTotalAlarmTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total alarm time.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxBatteryBarCount">
            <summary>
            Return the number of battery bars this instrument has
            </summary>
            <returns>Always returns 4 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasAlarmEventsFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasDataLoggingFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasDataLoggingTempFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasBaseInfoLogFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.RecordingIntervalIncrement">
            <summary>
            Get the increment that is allowed for recording interval
            </summary>
            <returns>Always returns 1 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MinBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 50 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 99 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MinBumpInterval">
            <summary>
            Valid internval range is from minimum of 0.5 to maximum of 7, in increments of 0.5
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxBumpInterval">
            <summary>
            Valid internval range is from minimum of 0.5 to maximum of 7, in increments of 0.5
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxUserCount">
            <summary>
            Returns the maximum number of users allowed in the Users list
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxSiteCount">
            <summary>
            Returns the maximum number of sites allowed in the Sites list
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxCompanyLength">
            <summary>
            Returns maximum allowed length of the instrument's Active Company field.
            </summary>
            <returns>Always returns 24 for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.Mx6Driver.getActiveCompany"/>
            <seealso cref="M:ISC.Instrument.Driver.Mx6Driver.setActiveCompany(System.String)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.SupportedSecurityCodeTypes">
            <summary>
            Returns type of security code (none, numeric, alphanumeric, etc.).
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MinSecurityCodeLength">
            <summary>
            Returns the minimum length allowed for a security code.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxSecurityCodeLength">
            <summary>
            Returns the maximum length allowed for a security code.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.DefaultSecurityCode">
            <summary>
            Returns the default security code.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasSensorDisablingFeature">
            <summary>
            
            </summary>
            <returns>Always returns true. Sensors in this instrument type can be
            enabled or disabled</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasBluetoothFeature">
            <summary>
            Indicates whether or not the instrument has a bluetooth capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's bluetooth methods.
            e.g. getBluetoothMacAddress, etc.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasWirelessFeature">
            <summary>
            Indicates whether or not the instrument has a wireless capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's wireless methods.
            e.g. getWirelessMacAddress, getWirelessTransmissionInterval, etc.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasWirelessTransmissionIntervalConfigFeature">
            <summary>
             Indicates whether or not the instrument's Wireless Transmission Interval setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessTransmissionInterval(System.Int32)"/> method. 
            </remarks>
            <returns>Always returns false for this instrument type. The wireless transmission interval is a factory-only setting.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessTransmissionInterval(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasWirelessNetworkDisconnectDelayConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Network Disconnect Delay Config Feature
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessNetworkDisconnectDelay(System.Int32)"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasWirelessBindingTimeoutConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Script Binding Timeout setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessBindingTimeout(System.Int32)"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasWirelessAlarmMaskFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Alarm Mask setting is supported
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getWirelessAlarmMask"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasWirelessListeningPostChannelMaskFeature">
            <summary>
            Indicates whether or not the instrument's Listening Post Channel Mask setting is supported.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasGpsFeature">
            <summary>
            Indicates whether or not the instrument has GPS capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's GPS methods.
            e.g. getGpsReadingInterval, etc.
            </remarks>	
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MinGpsReadingInterval">
            <summary>
            Returns the instrument's minimum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxGpsReadingInterval">
            <summary>
            Returns the instrument's maximum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasBacklightConfigFeature">
            <summary>
            Returns whether or not the instrument can be configured with different backlight options.
            </summary>
            <returns>
            For this instrument type, will only return true for 3.00 or newer instruments (i.e,
            where both Timed and AlaysOn options are supported, versus just Timed that older MX6
            units support.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasBacklightTimeoutConfigFeature">
            <summary>
            Indicates whether or not backlight timeout interval can be configured for the instrument.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MinBacklightTimeout">
            <summary>
            Get instrument's minimum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxBacklightTimeout">
            <summary>
            Get instrument's maximum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.SupportedBacklightOptions">
            <summary>
            Returns a list of backlight options that this instrument is capable of.
            </summary>
            <returns>
            The returned list contains <see cref="T:ISC.Instrument.TypeDefinition.BackLightOption"/> enums.
            <para>
            For this instrument type, the list will contain only <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.Timed"/>
            if the instrument is older than 3.00.
            </para>
            For 3.00 and newer instrument, the list will contain <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.Timed"/>
            and <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.AlwaysOn"/>.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.SupportedLanguages">
            <summary>
            Returns the languages that the instrument is capable of supporting.
            </summary>
            <returns>
            For instruments older than 3.00, the returned list contains BahasaIndonesia,
            Dutch, English, French, German, Italian, PortugueseBrazil, and Spanish.
            <para>
            If instrument is 3.00 or newer, the list will also contain Czech, Polish, and Russian.
            </para>
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxCompanyMessageLines">
            <summary>
            Returns maximum number of lines that the "company message" can be.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxCompanyMessageLineLength">
            <summary>
            Returns the maximum number of characters that each line of the "company message" can be.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxAlarmActionMessages">
            <summary>
            If the instrument is capable of displaying text messages when a particular sensor type goes into alarm,
            then this value indicates the number of these messages that the instrument can store.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxAlarmActionMessageLines"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxAlarmActionMessageLineLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxAlarmActionMessageLines">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of text lines allowed in each message.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxAlarmActionMessageLineLength"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxAlarmActionMessageLineLength">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of characters allowed in each line of a text.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxAlarmActionMessageLines"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasOomWarningIntervalConfigFeature">
            <summary>
            Indicates if the instrument has an OOM ("Out-of-Motion") warning interval.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MinOomWarningInterval">
            <summary>
            Returns the instrument's minimum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx6Definition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxOomWarningInterval">
            <summary>
            Returns the instrument's maximum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Mx6Definition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasDockIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "dock interval" that can be changed.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MinDockInterval">
            <summary>
            Returns the instrument's minimum allowed docking interval, in days.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxDockInterval">
            <summary>
            Returns the instrument's maximum allowed docking interval, in days.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.HasMaintenanceIndicatorIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "maintenance indicator interval" that can be changed.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MinMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's minimum allowed maintenace indicator interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Mx6Definition.MaxMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's maximum allowed maintenace interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.OptionRegisterType">
            <summary>
            THIS ENUM IS PUBLIC SO THAT ISC.Instrument.Driver HASE ACCESS TO IT.
            NO OTHER SOFTWARE SHOULD USE THIS!
            </summary>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.OptionException">
            <summary>
            Thrown if an attempt is made to get/set an option
            that the instrument does not support.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.SensorCode.COMBUSTIBLE_PPM">
            <summary>
            Combustible (PPM) sensor.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.SensorCode.COMBUSTIBLE_CH4">
            <summary>
            Combustible (%VOL) sensor for measuring methane.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.SensorCode.COMBUSTIBLE_LEL">
            <summary>
            Standard Combustible (%LEL) sensor.
            </summary>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.EquipmentSubType">
            <summary>
            EquipmentSubType is returned by the driver's <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getEquipmentSubType"/> method.
            </summary>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getEquipmentSubType"/>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.EquipmentSubType.None">
            <summary>
            This sub-type is used for instrument types that do not have any sub-types, such as Tango and GasBadges.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.EquipmentSubType.VentisPro4">
            <summary>
            A 4-gas Ventis Pro instrument.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.EquipmentSubType.VentisPro5">
            <summary>
            A 5-gas Ventis Pro instrument.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.EquipmentSubType.Mx4iQuad">
            <summary>
            An MX4 iQuad instrument.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.EquipmentSubType.Mx4Ventis">
            <summary>
            An MX4 Ventis instrument.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.EquipmentSubType.Mx4Scout">
            <summary>
            An MX4 Scout instrument.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.EquipmentSubType.Mx4VentisLs">
            <summary>
            An MX4 Ventis-LS instrument.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.EquipmentSubType.Undefined">
            <summary>
            Sub-type has not yet been programmed.
            </summary>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.OptionGroup">
            <summary>
            Returned by <see cref="P:ISC.Instrument.TypeDefinition.InstrumentOption.Group">InstrumentOption.Group</see>.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.OptionGroup.Wireless">
            <summary>
            Wireless options that affect the instrument's behavior, but not the wireless module's behavior.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.OptionGroup.WirelessModule">
            <summary>
            Wireless options that directly affect (and are stored in) the wireless module.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.OptionGroup.Bluetooth">
            <summary>
            Options related to Bluetooth.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.OptionGroup.GPS">
            <summary>
            Options related to GPS.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.OptionGroup.iAssign">
            <summary>
            Options related to iAssign/NFC, etc.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.OptionGroup.iNetNow">
            <summary>
            Options related to iNet Now.
            </summary>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.SecurityCodeTypes">
            <summary>
            Defines the allowable characters for a security code.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.SecurityCodeTypes.None">
            <summary>
            Instrument has no security code.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.SecurityCodeTypes.Empty">
            <summary>
            An Empty security code allowed.  This is regardless of min length allowed.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.SecurityCodeTypes.Alpha">
            <summary>
            Alphabetical characters allowed.  e.g. Characters A through Z.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.SecurityCodeTypes.Numeric">
            <summary>
            Numeric characters allowed.  e.g. Digits 0 through 9.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.SecurityCodeTypes.Base36">
            <summary>
            Base36 allowed. e.g. A mixture of letters A-Z and digits 0-9.
            </summary>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.BackLightOption">
            <summary>
            This enum is for enumerating the backlight options
            </summary>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.DateTimeType">
            <summary>
            What is this used for?
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.DateTimeType.None">
            <summary>
            Instrument provides no last calibration date/time info
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.DateTimeType.DateTime">
            <summary>
            DateTime field contains full date/time information (month,day,year, + hour,minute,second).
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.DateTimeType.Date">
            <summary>
            DateTime field contains only date information (month,day,year), but no time info.
            </summary>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.Country">
            <summary>
            Countries are currently returned only by the driver's <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getCountryOfOrigin"/> method.
            </summary>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getCountryOfOrigin"/>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.Country.USA">
            <summary>
            USA is the default
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.Country.Czech">
            <summary>
            Czech Republic
            </summary>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.LanguageId">
            <summary>
            Enumerated type to be used for specifying language types supported by instruments.
            </summary>
            <remarks>
            The integer values for language match the language IDs that the instruments' firmware uses.
            </remarks>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.M40Definition">
            <summary>
            Used for the M40, M40m, and M40ma multi-gas instruments.
            </summary>
            <remarks>
            It is <b>not</b> used for the M40 Pro instrument.
            <para>
            This instrument type has no InstrumentOptions.
            </para>
            </remarks>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.M40Definition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.M40Definition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED BY THE InstrumentDriver.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.M40Definition.#ctor(System.String)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.M40Definition.HasSensorGasCodeConfigFeature(System.String)">
            <summary>
            Returns whether or not the sensor can be configured to detect different types
            of gases.  For example, changing the response factor of a PID sensor, or correlation
            factor of an LEL sensor.
            </summary>
            <param name="sensorCode">One of our standard sensor codes; e.g. "S0019".</param>
            <returns>Always returns false.</returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.M40Definition.HasSensorCalGasConfigFeature(System.String)">
            <summary>
            Indicates whether or not specified sensor type can have its calibration gas changed.
            </summary>
            <param name="sensorCode">One of our standard sensor codes "S0019" for example.</param>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxBatteryBarCount">
            <summary>
            Return the number of battery bars this instrument has
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxSensorCapacity">
            <summary>
            Returns the maximum amount of installed sensors that the instrument supports.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasDualSenseFeature">
            <summary>
            Indicates whether or not the instrument type supports DualSense sensors.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasTotalRunTimeFeature">
            <summary>
            </summary>
            <returns>
            Always returns true for false instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasTotalAlarmTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total alarm time.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasBacklightConfigFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxCompanyLength">
            <summary>
            Returns maximum allowed length of the instrument's Active Company field.
            </summary>
            <returns>
            This instrument type does not have an Active Company field,
            so this property always returns zero.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MinBumpThreshold">
            <summary>
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxBumpThreshold">
            <summary>
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasStelFeature">
            <summary>
            Indicates whether or not the instrument supports STEL calculation.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasTwaFeature">
            <summary>
            Indicates whether or not the instrument supports TWA calculation.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.SupportedSecurityCodeTypes">
            <summary>
            This instrument actually does have a security code, but it is not accessible via Modbus.
            Therefore, as far as driver is concerned, there is no security code.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.DefaultSecurityCode">
            <summary>
            This instrument actually does have a security code, but it is not accessible via Modbus.
            Therefore, as far as driver is concerned, there is no security code.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MinSecurityCodeLength">
            <summary>
            This instrument actually does have a security code, but it is not accessible via Modbus.
            Therefore, as far as driver is concerned, there is no security code.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxSecurityCodeLength">
            <summary>
            This instrument actually does have a security code, but it is not accessible via Modbus.
            Therefore, as far as driver is concerned, there is no security code.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MinCalibrationInterval">
            <summary>
            Do not call if HasCalIntervalConfigFeature returns false
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxCalibrationInterval">
            <summary>
            Do not call if HasCalIntervalConfigFeature returns false
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasAlarmEventsFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasDataLoggingFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasDataLoggingTempFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasBaseInfoLogFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasBacklightTimeoutConfigFeature">
            <summary>
            Indicates whether or not backlight timeout can be configured for the instrument.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MinBacklightTimeout">
            <summary>
            Get instrument's minimum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxBacklightTimeout">
            <summary>
            Get instrument's maximum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.SupportedBacklightOptions">
            <summary>
            Returns a list of backlight options that this instrument is capable of.
            </summary>
            <returns>
            The returned list contains <see cref="T:ISC.Instrument.TypeDefinition.BackLightOption"/> enums.
            For this instrument type, the list always only contains <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.Timed"/>.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.SupportedLanguages">
            <summary>
            Returns the languages that the instrument is capable of supporting.
            </summary>
            <returns>This instrument type always returns an empty array. It has no language support.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasBluetoothFeature">
            <summary>
            Indicates whether or not the instrument has a bluetooth capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's bluetooth methods.
            e.g. getBluetoothMacAddress, etc.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasWirelessFeature">
            <summary>
            Indicates whether or not the instrument has a wireless capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's wireless methods.
            e.g. getWirelessMacAddress, getWirelessTransmissionInterval, etc.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasWirelessTransmissionIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Transmission Interval setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessTransmissionInterval(System.Int32)"/> method. 
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessTransmissionInterval(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasWirelessNetworkDisconnectDelayConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Network Disconnect Delay Config Feature
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessNetworkDisconnectDelay(System.Int32)"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasWirelessBindingTimeoutConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Script Binding Timeout setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessBindingTimeout(System.Int32)"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasWirelessAlarmMaskFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Alarm Mask setting is supported
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getWirelessAlarmMask"/> method. 
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasWirelessListeningPostChannelMaskFeature">
            <summary>
            Indicates whether or not the instrument's Listening Post Channel Mask setting is supported.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasGpsFeature">
            <summary>
            Indicates whether or not the instrument has GPS capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's GPS methods.
            e.g. getGpsReadingInterval, etc.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MinGpsReadingInterval">
            <summary>
            Returns the instrument's minimum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxGpsReadingInterval">
            <summary>
            Returns the instrument's maximum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxCompanyMessageLines">
            <summary>
            Returns maximum number of lines that the "company message" can be.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxCompanyMessageLineLength">
            <summary>
            Returns the maximum number of characters that each line of the "company message" can be.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxAlarmActionMessages">
            <summary>
            If the instrument is capable of displaying text messages when a particular sensor type goes into alarm,
            then this value indicates the number of these messages that the instrument can store.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.M40Definition.MaxAlarmActionMessageLines"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.M40Definition.MaxAlarmActionMessageLineLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxAlarmActionMessageLines">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of text lines allowed in each message.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.M40Definition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.M40Definition.MaxAlarmActionMessageLineLength"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxAlarmActionMessageLineLength">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of characters allowed in each line of a text.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.M40Definition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.M40Definition.MaxAlarmActionMessageLines"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasOomWarningIntervalConfigFeature">
            <summary>
            Indicates if the instrument has an OOM ("Out-of-Motion") warning interval.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MinOomWarningInterval">
            <summary>
            Returns the instrument's minimum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.M40Definition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.M40Definition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxOomWarningInterval">
            <summary>
            Returns the instrument's maximum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.M40Definition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.M40Definition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasDockIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "dock interval" that can be changed.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MinDockInterval">
            <summary>
            Returns the instrument's minimum allowed docking interval, in days.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxDockInterval">
            <summary>
            Returns the instrument's maximum allowed docking interval, in days.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.HasMaintenanceIndicatorIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "maintenance indicator interval" that can be changed.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MinMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's minimum allowed maintenace indicator interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40Definition.MaxMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's maximum allowed maintenace interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.SupportedVersion">
            <summary>
            Used to represent which the range of an equipment's software versions a particular feature or option is supported in.
            </summary>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.SupportedVersion.All">
            <summary>
            A static instance that has both a null Minimum and a null Maximum. Indicates that <u>all</u> versions are supported.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.SupportedVersion.#ctor(System.String,System.String)">
            <summary>
            </summary>
            <param name="minVersion">
            The ealiest version of the instrument that the feature is supported in.
            <para>Either null or empty can be specified if there is no minimum version.</para>
            </param>
            <param name="maxVersion">
            The last version of the instrument that the feature is supported in.
            <para>Either null or empty can be specified if there is no maximum version.</para>
            </param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.SupportedVersion.#ctor(System.Version,System.Version)">
            <summary>
            </summary>
            <param name="minVersion">
            The ealiest version of the instrument that the feature is supported in.
            <para>Either null or empty can be specified if there is no minimum version.</para>
            </param>
            <param name="maxVersion">
            The last version of the instrument that the feature is supported in.
            <para>Either null or empty can be specified if there is no maximum version.</para>
            </param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.SupportedVersion.IsSupported(System.String)">
            <summary>
            Evaluates the passed in version against the instance's min and max versions and returns
            true if within range.
            </summary>
            <param name="versionString"></param>
            <returns></returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.SupportedVersion.IsSupported(System.Version)">
            <summary>
            Evaluates the passed in version against the instance's min and max versions and returns
            true if within range.
            </summary>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.SupportedVersion.IsSupported(System.Collections.Generic.IEnumerable{ISC.Instrument.TypeDefinition.SupportedVersion},System.String)">
            <summary>
            Indicates if feature is supported by the specified firmware version of the instrument.
            </summary>
            <param name="version">If null/empty, then the return value is always true.</param>
            <returns>True if the feature is supported for the specified version, or the specified version is empty.
            Otherwise, false is returned.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SupportedVersion.Minimum">
            <summary>
            Indicates the ealiest version of the instrument that the feature is supported in.
            Null if there is no minimum version (i.e., the feature has always been supported.)
            </summary>
            <remarks>
            Some options are only supported by later versions of instrument firmware, but not earlier versions.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SupportedVersion.Maximum">
            <summary>
            Indicates the last version of the instrument that the feature is supported in.
            Null if there is no maximum version (i.e., support for the feature has not been removed.)
            </summary>
            <remarks>
            Some options are only supported by earlier versions of instrument firmware, but not later versions.
            </remarks>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.SoftwareVersionCallback">
            <summary>
            Callback that will return the instrument's software version.
            </summary>
            <remarks>
            <note>
            THIS IS PUBLIC SO THAT ISC.Instrument.Driver HAS ACCESS TO IT.
            NO OTHER SOFTWARE SHOULD BE USING THIS.
            </note>
            </remarks>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback">
            <summary>
            Callback that will return the instrument's sub-type.
            </summary>
            <remarks>
            <note>
            THIS IS PUBLIC SO THAT ISC.Instrument.Driver HAS ACCESS TO IT.
            NO OTHER SOFTWARE SHOULD BE USING THIS.
            </note>
            </remarks>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.M40ProDefinition">
            <summary>
            Type definitions for the M40 Pro multigas instrument.
            </summary>
            <remarks>
            This driver is <b>not</b> used for the M40, M40m, or M40ma instruments.
            <para>
            This instrument type's options are as follows...
            </para>
            <para>
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Operation">OptionGroup.Operation</see>...
            </para>
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>ALLON</term>  <term/>               <term>Always On</term>                          <term/>    </item>   
            <item> <term>Boolean</term>  <term>FBUMP</term>  <term/>               <term>Can bump in field</term>                  <term/>    </item>
            <item> <term>Boolean</term>  <term>FCAL</term>   <term/>               <term>Can calibrate in field</term>             <term/>    </item>
            <item> <term>Boolean</term>  <term>FZERO</term>  <term/>               <term>Can zero in field</term>                  <term/>    </item>
            </list>
             
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Sensors">OptionGroup.Sensors</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>QCAL</term>   <term/>               <term>Allow Quick Cal</term>                    <term/>    </item>
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Alarms">OptionGroup.Alarms</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>LATCH</term>  <term/>               <term>Alarm latching</term>                     <term/>    </item> 
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Admin">OptionGroup.Admin</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
            </listheader>
            <item> <term>Multi</term>    <term>CIMOD</term>  <term/>               <term>Confidence indicator</term>               <term/>    </item>
            <item> <term/>               <term/>             <term>CBEEP</term>    <term>Audio confidence indicator</term>         <term/>    </item>
            <item> <term/>               <term/>             <term>CVIS</term>     <term>Visual confidence indicator</term>        <term/>    </item>
            <item> <term/>               <term/>             <term>CALL</term>     <term>Both audio and visual indicator</term>    <term/>    </item>
            <item> <term/>               <term/>             <term>CNIND</term>    <term>No confidence indicator</term>            <term/>    </item>
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.None">OptionGroup.None</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
            </listheader>
            <item> <term>Multi</term>    <term>DPMOD</term>  <term/>               <term>Display modes</term>                      <term/>    </item>
            <item> <term/>               <term/>             <term>DTXT</term>     <term>Display text</term>                       <term/>    </item>
            <item> <term/>               <term/>             <term>DNUM</term>     <term>Display is numeric</term>                 <term/>    </item>  
            <item> <term>Boolean</term>  <term>CALDU</term>  <term/>               <term>Enable Calibration Past Due warning</term><term/>    </item>
            <item> <term>Boolean</term>  <term>BMPDU</term>  <term/>               <term>Enable Bump Past Due warningn</term>      <term/>    </item>  
            <item> <term>Multi</term>    <term>CALD</term>   <term/>               <term>Calibration Display Mode</term>           <term/>    </item>
            <item> <term/>               <term/>             <term>CALDL</term>    <term>Display days since last calibration</term><term/>    </item>
            <item> <term/>               <term/>             <term>CALDN</term>    <term>Display days until next calibration</term><term/>    </item>  
            </list>
            </remarks>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.M40ProDefinition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.M40ProDefinition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED BY THE InstrumentDriver.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.M40ProDefinition.#ctor(System.String)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40ProDefinition.SupportedLanguages">
            <summary>
            Returns the languages that the instrument is capable of supporting.
            </summary>
            <returns>For this instrument type, the returned languages are always English, French, German, and Spanish.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40ProDefinition.HasBluetoothFeature">
            <summary>
            Indicates whether or not the instrument has a bluetooth capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's bluetooth methods.
            e.g. getBluetoothMacAddress, etc.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.M40ProDefinition.HasWirelessFeature">
            <summary>
            Indicates whether or not the instrument has a wireless capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's wireless methods.
            e.g. getWirelessMacAddress, getWirelessTransmissionInterval, etc.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.Tx1Definition">
             <summary>
             For use with Tango Tx1 instruments.
             </summary>
             <remarks>
              
             This instrument type's options are as follows...
             <para>
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Operation">OptionGroup.Operation</see>...
             </para>
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>ALLON</term>  <term/>               <term>Always On</term>                          <term/>          </item>
             <item> <term>Boolean</term>  <term>DDHI</term>   <term/>               <term>Enable dock due of High</term>            <term>1.80</term> </item>
             <item> <term>Boolean</term>  <term>DDLO</term>   <term/>               <term>Enable dock due of Low</term>             <term>1.80</term> </item>
             <item> <term>Boolean</term>  <term>DDSTE</term>   <term/>              <term>Enable dock due of STEL</term>            <term>1.80</term> </item>
             <item> <term>Boolean</term>  <term>DDTWA</term>   <term/>              <term>Enable dock due of TWA</term>             <term>1.80</term> </item>
             <item> <term>Boolean</term>  <term>DSTEL</term>  <term/>               <term>Enable display of STEL</term>             <term/>          </item>
             <item> <term>Boolean</term>  <term>DTWA</term>   <term/>               <term>Enable display of TWA</term>              <term/>          </item>
             <item> <term>Boolean</term>  <term>FBUMP</term>  <term/>               <term>Can bump in field</term>                  <term/>          </item>
             <item> <term>Boolean</term>  <term>FCAL</term>   <term/>               <term>Can calibrate in field</term>             <term/>          </item>
             <item> <term>Boolean</term>  <term>FZERO</term>  <term/>               <term>Can zero in field</term>                  <term/>          </item>
             </list>
             <note>Note that for the ALLON option to work, the instrument must also have a security code.</note>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Alarms">OptionGroup.Alarms</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>ARSHT</term>  <term/>               <term>Allow shutdown in alarm</term>            <term>1.60</term></item>
             <item> <term>Boolean</term>  <term>ARDOC</term>  <term/>               <term>Allow Alarms when docked</term>           <term>1.80</term></item>    
             <item> <term>Boolean</term>  <term>AVIB</term>   <term/>               <term>Vibrating alarm</term>                    <term/>    </item>
             <item> <term>Boolean</term>  <term>GALRT</term>  <term/>               <term>Enable Gas Alerts</term>                  <term>1.80</term></item>   
             <item> <term>Boolean</term>  <term>LATCH</term>  <term/>               <term>Alarm latching</term>                     <term/>    </item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Admin">OptionGroup.Admin</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                                         <term>Versions</term>
             </listheader>
             <item> <term>Multi</term>    <term>BOD</term>  <term/>                 <term>Bump overdue warning</term>                                <term/>    </item>
             <item> <term/>               <term/>             <term>BODD</term>     <term>Bump overdue warning disabled</term>                       <term/>    </item>
             <item> <term/>               <term/>             <term>BODAU</term>    <term>Audible bump overdue warning</term>                        <term/>    </item>
             <item> <term/>               <term/>             <term>BODVS</term>    <term>Visual bump overdue warning</term>                         <term/>    </item>
             <item> <term/>               <term/>             <term>BODAL</term>    <term>Both Audible and Visual bump overdue warnings</term>       <term/>    </item>
             <item> <term/>               <term/>             <term>BODDO</term>    <term>Display only bump overdue warnings</term>                  <term>1.80</term></item>
             <item> <term>Multi</term>    <term>CIMOD</term>  <term/>               <term>Confidence indicator</term>                                <term/>    </item>
             <item> <term/>               <term/>             <term>CNIND</term>    <term>Confidence indicators disabled</term>                      <term/>    </item>
             <item> <term/>               <term/>             <term>CBEEP</term>    <term>Audio confidence indicator</term>                          <term/>    </item>
             <item> <term/>               <term/>             <term>CVIS</term>     <term>Visual confidence indicator</term>                         <term/>    </item>
             <item> <term/>               <term/>             <term>CALL</term>     <term>Both Audible and Visual confidence indicator</term>        <term>1.80</term></item>
             <item> <term>Multi</term>    <term>COD</term>    <term/>               <term>Calibration overdue warning</term>                         <term/>    </item>
             <item> <term/>               <term/>             <term>CODD</term>     <term>Calibration overdue warning disabled</term>                <term/>    </item>
             <item> <term/>               <term/>             <term>CODAU</term>    <term>Audible calibration overdue warning</term>                 <term/>    </item>
             <item> <term/>               <term/>             <term>CODVS</term>    <term>Visual calibration overdue warning</term>                  <term/>    </item>
             <item> <term/>               <term/>             <term>CODAL</term>    <term>Both Audible and Visual calibration overdue warnings</term><term/>    </item>
             <item> <term/>               <term/>             <term>CODDO</term>    <term>Display only calibration overdue warnings</term>           <term>1.80</term></item>
             <item> <term>Multi</term>    <term>DOD</term>    <term/>               <term>Dock overdue warning</term>                                <term>1.80</term>   </item>
             <item> <term/>               <term/>             <term>DODD</term>     <term>Dock overdue warning disabled</term>                       <term>1.80</term>   </item>
             <item> <term/>               <term/>             <term>DODAU</term>    <term>Audible Dock overdue warning</term>                        <term>1.80</term>   </item>
             <item> <term/>               <term/>             <term>DODVS</term>    <term>Visual Dock overdue warning</term>                         <term>1.80</term>   </item>
             <item> <term/>               <term/>             <term>DODAL</term>    <term>Both Audible and Visual Dock overdue warnings</term>       <term>1.80</term>   </item>
             <item> <term/>               <term/>             <term>DODDO</term>    <term>Display only Dock overdue warnings</term>                  <term>1.80</term></item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.None">OptionGroup.None</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
              
             <item> <term>Multi</term>    <term>DPMOD</term>  <term/>               <term>Display modes</term>                      <term/>    </item>
             <item> <term/>               <term/>             <term>DTXT</term>     <term>Display text</term>                       <term/>    </item>
             <item> <term/>               <term/>             <term>DNUM</term>     <term>Display is numeric</term>                 <term/>    </item>
               
             <item> <term>Boolean</term>  <term>MAG</term>    <term/>               <term>Magnetic field option</term>              <term>1.00.10</term></item>
              
             <item> <term>Multi</term>    <term>CALD</term>   <term/>               <term>Calibration Display Mode</term>            <term/>    </item>
             <item> <term/>               <term/>             <term>CALDL</term>    <term>Display Last Calibration date</term>       <term/>    </item>
             <item> <term/>               <term/>             <term>CALDN</term>    <term>Display Next Calibration date</term>       <term/>    </item>
            
             </list>
             </remarks>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Tx1Definition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Tx1Definition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED THE BY InstrumentDriver.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Tx1Definition.#ctor(System.String)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Tx1Definition.HasSensorGasCodeConfigFeature(System.String)">
            <summary>
            Returns whether or not the sensor can be configured to detect different types
            of gases.  For example, changing the response factor of a PID sensor, or correlation
            factor of an LEL sensor.
            </summary>
            <param name="sensorCode">One of our standard sensor codes; e.g. "S0019".</param>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Tx1Definition.HasSensorCalGasConfigFeature(System.String)">
            <summary>
            Indicates whether or not specified sensor type can have its calibration gas changed.
            </summary>
            <param name="sensorCode">One of our standard sensor codes "S0019" for example.</param>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxSensorCapacity">
            <summary>
            Retrieve the number of sensors the instrument is capable of holding.
            </summary>
            <returns>Always returns 2 for this instrument type. The third "virtual sensor" does not count.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasDualSenseFeature">
            <summary>
            Indicates whether or not the instrument type supports DualSense sensors.
            </summary>
            <returns>Always returns true for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasTotalRunTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total runtime.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalRunTime"/> method.
            </remarks>
            <returns>
            Always returns true for this instrument type.
            </returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalRunTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasTotalAlarmTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total alarm time.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/> method.
            </remarks>
            <returns>Always returns true for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasBacklightConfigFeature">
            <summary>
            Indicates whether or not the instrument's backlight can be configured.
            </summary>
            <remarks>
            This should be called to see if the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setBackLightOption(ISC.Instrument.TypeDefinition.BackLightOption)"/>
            method can be safely called.
            Some instrument's backlight option cannot be modified as it is hard coded in the instrument.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setBackLightOption(ISC.Instrument.TypeDefinition.BackLightOption)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasBacklightTimeoutConfigFeature">
            <summary>
            Indicates whether or not backlight timeout can be configured for the instrument.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasAlarmEventsFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasDataLoggingFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasDataLoggingTempFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasBaseInfoLogFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasSensorDisablingFeature">
            <summary>
            </summary>
            <returns>Always returns false. Sensors in this instrument type cannot be
            enabled or disabled; they're always enabled</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasBluetoothFeature">
            <summary>
            Indicates whether or not the instrument has a bluetooth capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's bluetooth methods.
            e.g. getBluetoothMacAddress, etc.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasWirelessFeature">
            <summary>
            Indicates whether or not the instrument has a wireless capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's wireless methods.
            e.g. getWirelessMacAddress, getWirelessTransmissionInterval, etc.
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasWirelessTransmissionIntervalConfigFeature">
            <summary>
             Indicates whether or not the instrument's Wireless Transmission Interval setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessTransmissionInterval(System.Int32)"/> method. 
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessTransmissionInterval(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasWirelessNetworkDisconnectDelayConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Network Disconnect Delay Config Feature
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessNetworkDisconnectDelay(System.Int32)"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasWirelessBindingTimeoutConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Script Binding Timeout setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessBindingTimeout(System.Int32)"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasWirelessAlarmMaskFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Alarm Mask setting is supported
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getWirelessAlarmMask"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasWirelessListeningPostChannelMaskFeature">
            <summary>
            Indicates whether or not the instrument's Listening Post Channel Mask setting is supported.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasGpsFeature">
            <summary>
            Indicates whether or not the instrument has GPS capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's GPS methods.
            e.g. getGpsReadingInterval, etc.
            </remarks>	
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinGpsReadingInterval">
            <summary>
            Returns the instrument's minimum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxGpsReadingInterval">
            <summary>
            Returns the instrument's maximum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxCompanyLength">
            <summary>
            Returns maximum allowed length of the instrument's Active Company field.
            </summary>
            <returns>
            This instrument type does not have an Active Company field,
            so this property always returns zero.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasGasAlertFeature">
            <summary>
            Indicates whether or not the instrument supports gas "alerts".
            This is an alarm for a level of gas that is lower than the low alarm
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getSensorAlarmGasAlert(System.Int32)"/>
            and <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setSensorAlarmGasAlert(System.Int32,System.Double)"/> methods, 
            </remarks>
            <returns>
            Returns true if the version is 1.8 or newer
            </returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getSensorAlarmGasAlert(System.Int32)"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setSensorAlarmGasAlert(System.Int32,System.Double)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 50 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 95 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxBatteryBarCount">
            <summary>
            Return the number of battery bars this instrument has
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinBacklightTimeout">
            <summary>
            Get instrument's minimum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxBacklightTimeout">
            <summary>
            Get instrument's maximum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.SupportedBacklightOptions">
            <summary>
            Returns a list of backlight options that this instrument is capable of.
            </summary>
            <summary>
            Returns a list of backlight options that this instrument is capable of.
            </summary>
            <returns>
            The returned list contains <see cref="T:ISC.Instrument.TypeDefinition.BackLightOption"/> enums.
            For this instrument type, the list always only contains <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.Timed"/>.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.SupportedCountriesOfOrigin">
            <summary>
            Returns the possible "Country of Origins" that an instrument supports.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.SupportedLanguages">
            <summary>
            Returns the languages that the instrument is capable of supporting.
            </summary>
            <returns>For this instrument type type, the returned list languages are always English and French.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasMagneticFieldDurationFeature">
            <summary>
            Indicates whether or not the instrument supports the "magnetic field duration" setting.
            </summary>
            <remarks>
            This property should be called first to determine if it's safe to call 
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getMagneticFieldDuration"/>,
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>,
            <see cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinMagneticFieldDuration"/>, and <see cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxMagneticFieldDuration"/>.
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getMagneticFieldDuration"/>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinMagneticFieldDuration"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxMagneticFieldDuration"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinMagneticFieldDuration">
            <summary>
            The minimum allowed value allowed for the driver's 
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/> method.
            </summary>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxMagneticFieldDuration">
            <summary>
            The maximum allowed value allowed for <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>
            </summary>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setMagneticFieldDuration(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxCompanyMessageLines">
            <summary>
            Returns maximum number of lines that the "company message" can be.
            </summary>
            <returns>Always returns zero for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxCompanyMessageLineLength">
            <summary>
            Returns the maximum number of characters that each line of the "company message" can be.
            </summary>
            <returns>Always returns zero for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxAlarmActionMessages">
            <summary>
            If the instrument is capable of displaying text messages when a particular sensor type goes into alarm,
            then this value indicates the number of these messages that the instrument can store.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxAlarmActionMessageLines"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxAlarmActionMessageLineLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxAlarmActionMessageLines">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of text lines allowed in each message.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxAlarmActionMessageLineLength"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxAlarmActionMessageLineLength">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of characters allowed in each line of a text.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxAlarmActionMessageLines"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasOomWarningIntervalConfigFeature">
            <summary>
            Indicates if the instrument has an OOM ("Out-of-Motion") warning interval.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinOomWarningInterval">
            <summary>
            Returns the instrument's minimum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxOomWarningInterval">
            <summary>
            Returns the instrument's maximum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasDockIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "dock interval" that can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getDockInterval"/> method and 
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setDockInterval(System.Int32)"/> method 
            </remarks>
            <returns>Returns true if version is 1.8 or newer.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinDockInterval">
            <summary>
            Returns the instrument's minimum allowed docking interval, in days.
            </summary>
            <remarks>
            <note>
            This method should only be
            called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDockIntervalConfigFeature"/> returns true.
            </note>
            </remarks>
            <returns>Returns 1 for this instrument type.</returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasDockIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxDockInterval"/>
            <exception cref="T:System.NotSupportedException">NotSupportedException will be thrown if instrument is not running v1.8 or newer firmware.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxDockInterval">
            <summary>
            Returns the instrument's maximum allowed docking interval, in days.
            </summary>
            <remarks>
            <note>
            This method should only be
            called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasDockIntervalConfigFeature"/> returns true.
            </note>
            </remarks>
            <returns>Returns 365 for this instrument type.</returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasDockIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinDockInterval"/>
            <exception cref="T:System.NotSupportedException">NotSupportedException will be thrown if instrument is not running v1.8 or newer firmware.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.DockIntervalSupportedVersion">
            <summary>
            Returns the dock interval supported version
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasMaintenanceIndicatorIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "maintenance indicator interval" that can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getMaintenanceIndicatorInterval"/> method and 
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setMaintenanceIndicatorInterval(System.Int32)"/> method 
            </remarks>
            <returns>
            Returns true if version is 1.8 or higher
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaintenanceIndicatorIntervalSupportedVersion">
            <summary>
            Returns the maintenance indicator interval supported version
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's minimum allowed maintenace indicator interval, in minutes.
            </summary>
            <remarks>
            <note>
            This method should only be
            called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMaintenanceIndicatorIntervalConfigFeature"/> returns true.
            </note>
            </remarks>
            <returns>Returns 1 for this instrument type.</returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasMaintenanceIndicatorIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxMaintenanceIndicatorInterval"/>
            <exception cref="T:System.NotSupportedException">NotSupportedException will be thrown if instrument is not running v1.8 or newer firmware.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.Tx1Definition.MaxMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's maximum allowed maintenace indicator interval, in minutes.
            </summary>
            <remarks>
            <note>
            This method should only be
            called if <see cref="P:ISC.Instrument.TypeDefinition.InstrumentTypeDefinition.HasMaintenanceIndicatorIntervalConfigFeature"/> returns true.
            </note>
            </remarks>
            <returns>Always returns 60 for this instrument type.</returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.HasMaintenanceIndicatorIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.Tx1Definition.MinMaintenanceIndicatorInterval"/>
            <exception cref="T:System.NotSupportedException">NotSupportedException will be thrown if instrument is not running v1.8 or newer firmware.</exception>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.SafeCoreDefinition">
             <summary>
             For use with the SafeCore module.
             </summary>
             <remarks>
             This instrument type's options are as follows...
             <para>
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Startup">OptionGroup.Startup</see>...
             </para>
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                               <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>SDAYS</term>  <term/>               <term>View Next/Last/Dock Info on Startup</term>       <term/>     </item>
             </list>
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Operation">OptionGroup.Operation</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>ALLON</term>  <term/>               <term>Always On</term>                          <term/>     </item>
             <item> <term>Boolean</term>  <term>DAYS</term>   <term/>               <term>View Next/Last Cal or Dock screen</term>  <term/>     </item>
             <item> <term>Boolean</term>  <term>DCUS</term>   <term/>               <term>Enable Company, User, Site screen</term>  <term/>     </item>
             <item> <term>Boolean</term>  <term>FSTEL</term>  <term/>               <term>Enable clearing of STEL</term>             <term/>     </item>
             <item> <term>Boolean</term>  <term>FTWA</term>   <term/>               <term>Enable clearing of TWA</term>              <term/>     </item>
             <item> <term>Boolean</term>  <term>FBUMP</term>  <term/>               <term>Can bump in field</term>                  <term/>     </item>
             <item> <term>Boolean</term>  <term>FCAL</term>   <term/>               <term>Can calibrate in field</term>             <term/>     </item>
             <item> <term>Boolean</term>  <term>FPEAK</term>  <term/>               <term>Can clear peaks in field</term>           <term/>     </item>
             <item> <term>Boolean</term>  <term>FZERO</term>  <term/>               <term>Can zero in field</term>                  <term/>     </item>
             <item> <term>Boolean</term>  <term>GIFO</term>   <term/>               <term>Enable Gas Info screen</term>             <term/>     </item>
             </list>
            
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Sensors">OptionGroup.Sensors</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>CH4IH</term>  <term/>               <term>Enable CH4 IR High Range</term>           <term/>3.0 </item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Alarms">OptionGroup.Alarms</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Multi</term>    <term>AI</term>     <term/>               <term>Alarm indicators</term>                   <term/>     </item>
             <item> <term/>               <term/>             <term>AA</term>       <term>Audio alarms</term>                       <term/>     </item>
             <item> <term/>               <term/>             <term>AV</term>       <term>Visual alarms</term>                      <term/>     </item>
             <item> <term/>               <term/>             <term>AVA</term>      <term>Visual and audio alarms</term>            <term/>     </item>
             <item> <term/>               <term/>             <term>AD</term>       <term>Alarms disabled</term>                    <term/>     </item>
             <item> <term>Boolean</term>  <term>ARSHT</term>  <term/>               <term>Allow shutdown in alarm</term>            <term/>     </item>
             <item> <term>Multi</term>    <term>AUD</term>    <term/>               <term>Audio alarm type</term>                   <term/>     </item>
             <item> <term/>               <term/>             <term>AUD2</term>     <term>Dual tone</term>                          <term/>     </item>
             <item> <term/>               <term/>             <term>AUD1</term>     <term>Single tone</term>                        <term/>     </item>
             <item> <term/>               <term/>             <term>AUDSW</term>    <term>Sweep tone</term>                         <term/>     </item>
             <item> <term>Boolean</term>  <term>FSA</term>    <term/>               <term>Enable Full Screen Alarms</term>          <term/>     </item>
             <item> <term>Boolean</term>  <term>LATCH</term>  <term/>               <term>Alarm latching</term>                     <term/>     </item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Admin">OptionGroup.Admin</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>
             <item> <term>Multi</term>    <term>BOD</term>    <term/>               <term>Bump overdue warning</term>               <term/>     </item>
             <item> <term/>               <term/>             <term>BODD</term>     <term>Bump overdue warning disabled</term>      <term/>     </item>
             <item> <term/>               <term/>             <term>BODAU</term>    <term>Audible bump overdue warning</term>       <term/>     </item>
             <item> <term/>               <term/>             <term>BODVS</term>    <term>Visual bump overdue warning</term>        <term/>     </item>
             <item> <term/>               <term/>             <term>BODAL</term>    <term>All bump overdue warnings</term>          <term/>     </item>
             <item> <term>Multi</term>    <term>CALD</term>   <term/>               <term>Calibration days display Mode</term>      <term/>     </item>
             <item> <term/>               <term/>             <term>CALDL</term>    <term>Display days since last calibration</term><term/>     </item>
             <item> <term/>               <term/>             <term>CALDN</term>    <term>Display days until next calibration</term><term/>     </item>  
             <item> <term/>               <term/>             <term>DOCDN</term>    <term>Display days until next dock</term>       <term/>     </item>  
             <item> <term/>               <term/>             <term>LCALB</term>    <term>Display date of next calibration</term>   <term/>     </item>  
             <item> <term/>               <term/>             <term>LCALA</term>    <term>Display date of last calibration</term>   <term/>     </item>  
             <item> <term>Multi</term>    <term>CIMOD</term>  <term/>               <term>Confidence indicators</term>              <term/>     </item>
             <item> <term/>               <term/>             <term>CNIND</term>    <term>Confidence indicators disabled</term>     <term/>     </item>
             <item> <term/>               <term/>             <term>CBEEP</term>    <term>Audio confidence indicator</term>         <term/>     </item>
             <item> <term/>               <term/>             <term>CVIS</term>     <term>Visual confidence indicator</term>        <term/>     </item>
             <item> <term/>               <term/>             <term>CALL</term>     <term>All confidence indicators enabled</term>  <term/>     </item>
             <item> <term>Multi</term>    <term>CLKF</term>   <term/>               <term>Clock format</term>                       <term/>     </item>
             <item> <term/>               <term/>             <term>CLK12</term>    <term>12-hour format</term>                     <term/>     </item>
             <item> <term/>               <term/>             <term>CLK24</term>    <term>24-hour format</term>                     <term/>     </item>
             <item> <term>Multi</term>    <term>COD</term>    <term/>               <term>Calibration overdue warning</term>        <term/>     </item>
             <item> <term/>               <term/>             <term>CODD</term>     <term>Calibration overdue warning disabled</term><term/>    </item>
             <item> <term/>               <term/>             <term>CODAU</term>    <term>Audible calibration overdue warning</term><term/>     </item>
             <item> <term/>               <term/>             <term>CODVS</term>    <term>Visual calibration overdue warning</term> <term/>     </item>
             <item> <term/>               <term/>             <term>CODAL</term>    <term>All calibration overdue warnings</term>   <term/>     </item>
             <item> <term>Multi</term>    <term>DOD</term>    <term/>               <term>Dock overdue warning</term>               <term/>     </item>
             <item> <term/>               <term/>             <term>DODD</term>     <term>Dock overdue warning disabled</term>      <term/>     </item>
             <item> <term/>               <term/>             <term>DODAU</term>    <term>Audible dock overdue warning</term>       <term/>     </item>
             <item> <term/>               <term/>             <term>DODVS</term>    <term>Visual dock overdue warning</term>        <term/>     </item>
             <item> <term/>               <term/>             <term>DODAL</term>    <term>All dock overdue warnings</term>          <term/>     </item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Startup">OptionGroup.GPS</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                         <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>GPS</term>    <term/>               <term>Enable GPS</term>                          <term/>3.00</item>
             </list>
             
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.None">OptionGroup.None</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                        <term>Versions</term>
             </listheader>  
             <item> <term>Multi</term>    <term>DPMOD</term>  <term/>               <term>Display modes</term>                      <term/>    </item>
             <item> <term/>               <term/>             <term>DTXT</term>     <term>Display text</term>                       <term/>    </item>
             <item> <term/>               <term/>             <term>DNUM</term>     <term>Display is numeric</term>                 <term/>    </item>   
             </list>
            
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Wireless">OptionGroup.Wireless</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                                     <term>Versions</term>
             </listheader>
             <item> <term>Boolean</term>  <term>DWL</term>    <term/>               <term>View wireless screen</term>                            <term/>    </item>
             <item> <term>Multi</term>    <term>PAI</term>    <term/>               <term>Wireless peer alarm indicators</term>                  <term>3.0</term></item>
             <item> <term/>               <term/>             <term>PAIVA</term>    <term>Visual + Audio</term>                                  <term>3.0</term></item>
             <item> <term/>               <term/>             <term>PAIV</term>     <term>Visual</term>                                          <term>3.0</term></item>   
             <item> <term/>               <term/>             <term>PAIA</term>     <term>Audio</term>                                           <term>3.0</term></item>   
             <item> <term/>               <term/>             <term>PAIO</term>     <term>Off</term>                                             <term>3.0</term></item> 
             <item> <term>Boolean</term>  <term>WLANL</term>  <term/>               <term>Enable acknowledgement of "network lost" alarms</term> <term/>    </item>
             <item> <term>Boolean</term>  <term>WLAPA</term>  <term/>               <term>Enable acknowledgement of peer alarms</term>           <term/>    </item>
             <item> <term>Boolean</term>  <term>WLAPL</term>  <term/>               <term>Enable acknowledgement of "peer lost" alarms</term>    <term/>    </item>
             <item> <term>Boolean</term>  <term>WLFU</term>   <term/>               <term>Enable force whisper upload</term>                   <term>3.0</term></item>
             <item> <term>Boolean</term>  <term>WLHGA</term>   <term/>              <term>Enable wireless "high gas" alarm</term>              <term>3.0</term></item>
             <item> <term>Boolean</term>  <term>WLLG</term>   <term/>               <term>Enable "leave group" option on wireless screen</term><term>3.0</term></item>
             <item> <term>Boolean</term>  <term>WLLGA</term>   <term/>              <term>Enable wireless "low gas" alarm</term>               <term>3.0</term></item>
             <item> <term>Boolean</term>  <term>WLLP</term>   <term/>               <term>Enable wireless "last peer" alarm</term>             <term>3.0</term></item>
             <item> <term>Boolean</term>  <term>WLMDA</term>   <term/>              <term>Enable wireless "man-down" alarm</term>              <term>3.0</term></item>
             <item> <term>Boolean</term>  <term>WLNL</term>   <term/>               <term>Enable wireless "network lost" warning</term>        <term>   </term></item>
             <item> <term>Boolean</term>  <term>WLPA</term>   <term/>               <term>Enable wireless "panic" alarm</term>                 <term>3.0</term></item>
             <item> <term>Boolean</term>  <term>WLPF</term>   <term/>               <term>Enable pump fault alarm</term>                       <term>3.0</term></item>    
             <item> <term>Boolean</term>  <term>WLPL</term>   <term/>               <term>Enable wireless "peer lost" warning</term>           <term>   </term></item>
             <item> <term>Boolean</term>  <term>WLSA</term>   <term/>               <term>Enable wireless "stel" alarm</term>                  <term>3.0</term></item>
             <item> <term>Boolean</term>  <term>WLTA</term>   <term/>               <term>Enable wireless "twa" alarm</term>                   <term>3.0</term></item>
             </list>
            
             <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.WirelessModule">OptionGroup.WirelessModule</see>...
             <list type="table">
             <listheader>
                    <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                                     <term>Versions</term>
             </listheader>
             <item> <term>Multi</term>    <term>W</term>      <term/>               <term>Wireless</term>                                        <term/>   </item>
             <item> <term/>               <term/>             <term>WO</term>       <term>Off text</term>                                        <term/>   </item>
             <item> <term/>               <term/>             <term>WL</term>       <term>Local</term>                                           <term/>   </item>   
             <item> <term/>               <term/>             <term>WLC</term>      <term>Local and Cloud</term>                                 <term>3.0</term></item>   
             <item> <term>Boolean</term>  <term>WLCC</term>   <term/>               <term>Enable wireless custom encryption</term>               <term/>    </item>
             <item> <term>Multi</term>    <term>WLN</term>    <term/>               <term>Wireless network ID (a.k.a. "group")</term>            <term/>    </item>
             <item> <term/>               <term/>             <term>WLN0</term>     <term>Wireless network ID 0 ("A")</term>                     <term/>    </item>
             <item> <term/>               <term/>             <term>WLN1</term>     <term>Wireless network ID 1 ("B")</term>                     <term/>    </item>
             <item> <term/>               <term/>             <term>WLN2</term>     <term>Wireless network ID 2 ("C")</term>                     <term/>    </item>
             <item> <term/>               <term/>             <term>WLN3</term>     <term>Wireless network ID 3 ("D")</term>                     <term/>    </item>
             <item> <term/>               <term/>             <term>WLN4</term>     <term>Wireless network ID 4 ("E")</term>                     <term/>    </item>
             <item> <term/>               <term/>             <term>WLN5</term>     <term>Wireless network ID 5 ("F")</term>                     <term/>    </item>
             <item> <term/>               <term/>             <term>WLN6</term>     <term>Wireless network ID 6 ("G")</term>                     <term/>    </item>
             <item> <term/>               <term/>             <term>WLN7</term>     <term>Wireless network ID 7 ("H")</term>                     <term/>    </item> 
             <item> <term/>               <term/>             <term>WLN8</term>     <term>Wireless network ID 8 ("I")</term>                     <term/>    </item>
             <item> <term/>               <term/>             <term>WLN9</term>     <term>Wireless network ID 9 ("J")</term>                     <term/>    </item>
             </list>
             
             </remarks>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.SafeCoreDefinition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.SafeCoreDefinition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED THE BY InstrumentDriver.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.SafeCoreDefinition.#ctor(System.String)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasSensorGasCodeConfigFeature(System.String)">
            <summary>
            Returns whether or not the sensor can be configured to detect different types
            of gases.  For example, changing the response factor of a PID sensor, or correlation
            factor of an LEL sensor.
            </summary>
            <param name="sensorCode">One of our standard sensor codes; e.g. "S0019".</param>
            <returns>Returns true if sensorCode is PID, Combustible LEL, or Combustible PPM; Otherwise, false.</returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasSensorCalGasConfigFeature(System.String)">
            <summary>
            Indicates whether or not specified sensor type can have its calibration gas changed.
            </summary>
            <param name="sensorCode">One of our standard sensor codes "S0019" for example.</param>
            <returns>Returns true if sensorCode is PID, Combustible LEL, or Combustible PPM; Otherwise, false.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxSensorCapacity">
            <summary>
            Retrieve the number of sensors the instrument is capable of holding.
            </summary>
            <returns>
            For this instrument type, the returned value will always be 8.
            There are 6 physical slots, plus ability to have 2 COSH installed.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasDualSenseFeature">
            <summary>
            Indicates whether or not the instrument type supports DualSense sensors.
            </summary>
            <returns>Always returns true for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasBaseInfoLogFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinRecordingInterval">
            <summary>
            </summary>
            <returns>Always returns 1 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxRecordingInterval">
            <summary>
            </summary>
            <returns>Always returns 60 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.RecordingIntervalIncrement">
            <summary>
            Get the increment that is allowed for recording interval
            </summary>
            <returns>Always returns 1 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxBatteryBarCount">
            <summary>
            Return the number of battery bars this instrument has
            </summary>
            <returns>Always returns 4 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasTotalRunTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total runtime.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalRunTime"/> method.
            </remarks>
            <returns>
            Always returns true for this instrument type.
            </returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalRunTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasTotalAlarmTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total alarm time.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/> method.
            </remarks>
            <returns>Always returns true for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxUserCount">
            <summary>
            Returns the maximum number of users allowed in the Users list.
            </summary>
            <returns>Always returns 5 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxSiteCount">
            <summary>
            Returns the maximum number of sites allowed in the Sites list.
            </summary>
            <returns>Always returns 5 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxSiteLength">
            <summary>
            Maximum length of a site name.
            </summary>
            <returns>Always returns 16 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxUserLength">
            <summary>
            Maximum length of a user name.
            </summary>
            <returns>Always returns 16 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinSecurityCodeLength">
            <summary>
            </summary>
            <returns>Always returns 3 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxSecurityCodeLength">
            <summary>
            </summary>
            <returns>Always returns 3 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.DefaultSecurityCode">
            <summary>
            </summary>
            <returns>Always returns "000" for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.SupportedSecurityCodeTypes">
            <summary>
            </summary>
            <returns>Always returns Base36 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinBumpInterval">
            <summary>
            </summary>
            <returns>Always returns 0.5 (days) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxBumpInterval">
            <summary>
            </summary>
            <returns>Always returns 30 (days) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasBumpIntervalConfigFeature">
            <summary>
            </summary>
            <returns>Always returns true for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasBumpThresholdConfigFeature">
            <summary>
            </summary>
            <returns>Always returns true for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasBumpTimeoutConfigFeature">
            <summary>
            </summary>
            <returns>Always returns true for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.BumpIntervalIncrement">
            <summary>
            </summary>
            <returns>Always returns 0.5 (days) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.BumpTimeoutIntervalIncrement">
            <summary>
            </summary>
            <returns>Always returns 5 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.SupportedBacklightOptions">
            <summary>
            Returns a list of backlight options that this instrument is capable of.
            </summary>
            <returns>
            The returned list contains <see cref="T:ISC.Instrument.TypeDefinition.BackLightOption"/> enums.
            For this instrument type, the list always contains <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.Timed"/>,
            <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.AlwaysOn"/>, and <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.AlwaysOff"/>.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasBacklightConfigFeature">
            <summary>
            Indicates whether or not the instrument's backlight can be configured.
            </summary>
            <remarks>
            This should be called to see if the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setBackLightOption(ISC.Instrument.TypeDefinition.BackLightOption)"/>
            method can be safely called.
            Some instrument's backlight option cannot be modified as it is hard coded in the instrument.
            </remarks>
            <returns>Always returns true for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setBackLightOption(ISC.Instrument.TypeDefinition.BackLightOption)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasBacklightTimeoutConfigFeature">
            <summary>
            Indicates whether or not backlight timeout interval can be configured for the instrument.
            </summary>
            <returns>Always returned true for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.BacklightTimeoutSupportedVersion">
            <summary>
            </summary>
            <returns>Returns <see cref="F:ISC.Instrument.TypeDefinition.SupportedVersion.All"/> for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinBacklightTimeout">
            <summary>
            Get instrument's minimum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds. Always returns 5 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxBacklightTimeout">
            <summary>
            Get instrument's maximum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds.  Always returns 60 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.SupportedLanguages">
            <summary>
            Returns the languages that the instrument is capable of supporting.
            </summary>
            <returns>Returns the languages English, French, German and Spanish.</returns>       
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxCompanyLength">
            <summary>
            Returns maximum allowed length of the instrument's Active Company field.
            </summary>
            <returns>Always returns 32 for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.SafeCoreDriver.getActiveCompany"/>
            <seealso cref="M:ISC.Instrument.Driver.SafeCoreDriver.setActiveCompany(System.String)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxCompanyMessageLines">
            <summary>
            Returns maximum number of lines that the "company message" can be.
            </summary>
            <returns>
            Always returns 5 for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxCompanyMessageLineLength">
            <summary>
            Returns the maximum number of characters that each line of the "company message" can be.
            </summary>
            <returns>
            Always returns 10 for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 50 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 99 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinBumpTimeout">
            <summary>
            </summary>
            <returns>Always returns 30 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxBumpTimeout">
            <summary>
            </summary>
            <returns>Always returns 120 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxAlarmActionMessages">
            <summary>
            If the instrument is capable of displaying text messages when a particular sensor type goes into alarm,
            then this value indicates the number of these messages that the instrument can store.
            </summary>
            <returns>Always returns a value of 7 for this instrument type.</returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxAlarmActionMessageLines"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxAlarmActionMessageLineLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxAlarmActionMessageLines">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of text lines allowed in each message.
            </summary>
            <returns>
            Always returns 2 for this instrument type.
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxAlarmActionMessageLineLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxAlarmActionMessageLineLength">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of characters allowed in each line of a text.
            </summary>
            <returns>
            Always returns 9 for this instrument type.
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxAlarmActionMessageLines"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinCalibrationInterval">
            <summary>
            </summary>
            <returns>Always returns 1 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxCalibrationInterval">
            <summary>
            </summary>
            <returns>Always returns 365 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasGasAlertFeature">
            <summary/>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinTwaTimeBase">
            <summary>
            </summary>
            <returns>Always returns 1 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxTwaTimeBase">
            <summary>
            </summary>
            <returns>Always returns 168 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasBluetoothFeature">
            <summary>
            Indicates whether or not the instrument has a bluetooth capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's bluetooth methods.
            e.g. getBluetoothMacAddress, etc.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasWirelessFeature">
            <summary>
            Indicates whether or not the instrument has a wireless capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's wireless methods.
            e.g. getWirelessMacAddress, getWirelessTransmissionInterval, etc.
            </remarks>
            <returns>Always returns true for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasWirelessTransmissionIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Transmission Interval setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.SafeCoreDriver.setWirelessTransmissionInterval(System.Int32)"/> method. 
            </remarks>
            <returns>Always returns true for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.SafeCoreDriver.setWirelessTransmissionInterval(System.Int32)"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasWirelessNetworkDisconnectDelayConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Network Disconnect Delay Config Feature
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessNetworkDisconnectDelay(System.Int32)"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasWirelessBindingTimeoutConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Script Binding Timeout setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessBindingTimeout(System.Int32)"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasWirelessAlarmMaskFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Alarm Mask setting is supported
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getWirelessAlarmMask"/> method. 
            </remarks>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasWirelessListeningPostChannelMaskFeature">
            <summary>
            Indicates whether or not the instrument's Listening Post Channel Mask setting is supported.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.SafeCoreDriver.getWirelessListeningPostChannelMask"/> and 
            <see cref="M:ISC.Instrument.Driver.SafeCoreDriver.setWirelessListeningPostChannelMask(System.UInt16)"/> methods.
            </remarks>
            <returns>Returns true if firmware is 3.00 or newer.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasGpsFeature">
            <summary>
            Indicates whether or not the instrument has GPS capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's GPS methods.
            e.g. getGpsReadingInterval, etc.
            </remarks>	
            <returns>Returns false for this instrument type, if firmware version is 3.00 or later.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinGpsReadingInterval">
            <summary>
            Returns the instrument's minimum allowed GPS reading interval. Value is in minutes.
            </summary>
            <returns>Always returns a value of 1 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxGpsReadingInterval">
            <summary>
            Returns the instrument's maximum allowed GPS reading interval. Value is in minutes.
            </summary>
            <returns>Always returns a value of 60 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasGasOperationsLogFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.GasOperationsLogSupportedVersion">
            <summary>
            Always returns <see cref="F:ISC.Instrument.TypeDefinition.SupportedVersion.All"/> for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxProfilesCount">
            <summary>
            </summary>
            <returns>Always returns zero for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxCustomFactorsCount">
            <summary>
            </summary>
            <returns>Always returns zero for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxFavoriteFactorsCount">
            <summary>
            </summary>
            <returns>Always returns zero for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasDockIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "dock interval" that can be changed.
            </summary>
            <returns>
            Always returns true for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinDockInterval">
            <summary>
            Returns the instrument's minimum allowed docking interval, in days.
            </summary>
            <returns>Always returns 1 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxDockInterval">
            <summary>
            Returns the instrument's maximum allowed docking interval, in days.
            </summary>
            <returns>Always returns 365 for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasOomWarningIntervalConfigFeature">
            <summary>
            Indicates if the instrument has an OOM ("Out-of-Motion") warning interval.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinOomWarningInterval">
            <summary>
            Returns the instrument's minimum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxOomWarningInterval">
            <summary>
            Returns the instrument's maximum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasSensorDisablingFeature">
            <summary>
            </summary>
            <returns>Always returns false. Sensors in this instrument type cannot be
            enabled or disabled; they're always enabled</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.HasMaintenanceIndicatorIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "maintenance indicator interval" that can be changed.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MinMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's minimum allowed maintenace indicator interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.SafeCoreDefinition.MaxMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's maximum allowed maintenace interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.Optioner._instrumentOptions">
            <summary>
            Contains InstrumentOption objects representing the options that the instrument supports
            </summary>
            <remarks>
            <para>
            Intended to be populated by constructor
            </para>
            <note>
            Note that this was originally created in an old version of the .Net Framework before 
            generics existed.  Now that we have access to the Dictionary class, we've opted to
            leave this class a simple Hashtable due to the fact that the Hashtable contains
            a mixture of class types (InstrumentBooleanOptions and InstrumentMultiOptions). To
            try and do that with the strongly-type Dictionary collection is cumbersome.
            </note>
            </remarks>
            <seealso cref="T:ISC.Instrument.TypeDefinition.InstrumentOption"/>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.Optioner._profileOptions">
            <summary>
            Contains InstrumentOption objects representing the options that are in an instrument's profile.
            </summary>
            <remarks>
            <para>
            Intended to be populated by constructor
            </para>
            <para>
            Note that this was originally created in an old version of the .Net Framework before 
            generics existed.  Now that we have access to the Dictionary class, we've opted to
            leave this class a simple Hashtable due to the fact that the Hashtable contains
            a mixture of class types (InstrumentBooleanOptions and InstrumentMultiOptions). To
            try and do that with the strongly-type Dictionary collection is cumbersome.
            </para>
            </remarks>
            <seealso cref="T:ISC.Instrument.TypeDefinition.InstrumentOption"/>
            <seealso cref="!:InstrumentProfile"/>
        </member>
        <member name="F:ISC.Instrument.TypeDefinition.Optioner._softwareVersionCallback">
            <summary>
            Returns the instruent's software version.
            The software version is used to make decisions about which options are available.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Optioner.AddOptions(System.Collections.Generic.ICollection{ISC.Instrument.TypeDefinition.InstrumentOption})">
            <summary>
            THIS IS FOR USE BY THE OPTIONER AND INSTRUMENTDRIVER ONLY. APPLICATIONS SHOULD NOT CALL THIS.
            </summary>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Optioner.AddOrReplaceOptions(System.Collections.Generic.ICollection{ISC.Instrument.TypeDefinition.InstrumentOption})">
            <summary>
            THIS IS FOR USE BY THE OPTIONER AND INSTRUMENTDRIVER ONLY. APPLICATIONS SHOULD NOT CALL THIS.
            </summary>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Optioner.AddProfileOptions(System.Collections.Generic.ICollection{ISC.Instrument.TypeDefinition.InstrumentOption})">
            <summary>
            THIS IS FOR USE BY THE OPTIONER AND INSTRUMENTDRIVER ONLY. APPLICATIONS SHOULD NOT CALL THIS.
            </summary>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Optioner.Clear">
            <summary>
            THIS IS FOR USE BY THE OPTIONER AND INSTRUMENTDRIVER ONLY. APPLICATIONS SHOULD NOT CALL THIS.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown if called by an illegal assembly such as if directly called by an application.</exception>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Optioner.ClearProfile">
            <summary>
            THIS IS FOR USE BY THE OPTIONER AND INSTRUMENTDRIVER ONLY. APPLICATIONS SHOULD NOT CALL THIS.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown if called by an illegal assembly such as if directly called by an application.</exception>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Optioner.Remove(System.String)">
            <summary>
            THIS IS FOR USE BY THE OPTIONER AND INSTRUMENTDRIVER ONLY. APPLICATIONS SHOULD NOT CALL THIS.
            </summary>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Optioner.GetSupportedInstrumentOptions">
            <summary>
            Returns <see cref="T:ISC.Instrument.TypeDefinition.InstrumentOption">InstrumentOptions</see>
            representing all the options that the instrument is capable of supporting.
            </summary>
            <remarks>
            <para>
            The returned options excludes those options that are not supported by the
            version of the instrument specified in the constructor.
            </para>
            <para>
            i.e., for a given type of instrument, the supported options can be
            different depending on what version of firmware the instrument is running.
            </para>
            <para>
            Typically, newer versions of firmware introduce
            new options that older versions do not support.  But occassionally,
            options are taken away too... i.e., an older instrument may support 
            a particular option that is no longer supported by a newer version of
            its firmware.
            </para>
            <para>
            If no software version is specified,then ALL the options that the instrument can
            possibly support are returned.
            </para>
            </remarks>
            <returns>
            The returned Hashtable contains <see cref="T:ISC.Instrument.TypeDefinition.InstrumentOption"/> instances.
            Since InstrumentOption is an abstract class, that means the hashtable will
            contain a mixture of its various subclasses.  It is up to the caller
            to check the type of each returned instance and deal with it accordingly.
            <para>
            The options in the hashtable are keyed on their option code.
            e.g. "CBEEP" for Confidence Beep option.
            </para>
            </returns>
            <seealso cref="M:ISC.Instrument.TypeDefinition.Optioner.GetSupportedProfileOptions"/>
            <seealso cref="M:ISC.Instrument.TypeDefinition.Optioner.GetSupportedOption(System.String)"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Optioner.GetSupportedProfileOptions">
            <summary>
            Returns <see cref="T:ISC.Instrument.TypeDefinition.InstrumentOption">InstrumentOptions</see>
            representing all the options that the instrument's profiles are capable of supporting.
            </summary>
            <remarks>
            <para>
            The returned options excludes those options that are not supported by the
            version of the instrument specified in the constructor.
            </para>
            <para>
            i.e., for a given type of instrument, the supported options can be
            different depending on what version of firmware the instrument is running.
            </para>
            <para>
            Typically, newer versions of firmware introduce
            new options that older versions do not support.  But occassionally,
            options are taken away too... i.e., an older instrument may support 
            a particular option that is no longer supported by a newer version of
            its firmware.
            </para>
            <para>
            If no software version is specified,then ALL the options that the instrument can
            possibly support are returned.
            </para>
            </remarks>
            <returns>
            The returned Hashtable contains <see cref="T:ISC.Instrument.TypeDefinition.InstrumentOption"/> instances.
            Since InstrumentOption is an abstract class, that means the hashtable will
            contain a mixture of its various subclasses.  It is up to the caller
            to check the type of each returned instance and deal with it accordingly.
            <para>
            The options in the hashtable are keyed on their option code.
            e.g. "CBEEP" for Confidence Beep option.
            </para>
            </returns>
            <seealso cref="M:ISC.Instrument.TypeDefinition.Optioner.GetSupportedProfileOptions"/>
            <seealso cref="M:ISC.Instrument.TypeDefinition.Optioner.GetSupportedOption(System.String)"/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.Optioner.GetSupportedOption(System.String)">
            <summary>
            Returns an <see cref="T:ISC.Instrument.TypeDefinition.InstrumentOption"/> for the specified option code,
            as long as the instrument supports the specified option.
            Its current enabled state will be undefined.
            </summary>
            <remarks>
            <para>The returned option is free to be toggled by the caller then passed
            back to the driver to actually change it on the instrument.
            </para>
            <para>
            <note>
            The enabled state of
            the returned option is NOT its current state on the instrument. The 
            returned option object is intended to be modified by the caller then
            passed back via a call to something like setInstrumentOption.
            </note>
            </para>
            </remarks>
            <param name="code">Code specifying which option to return.
            e.g. "CBEEP" for Confidence Beep option.</param>
            <returns>
            Since InstrumentOption is an abstract class, that means one of its
            subclasses will be returned.  It is up to the caller
            to check the type of the returned instance and deal with it accordingly.
            <para>
            If the instrument does not support the specified option, then
            a null is returned.
            </para>
            </returns>
            <seealso cref="M:ISC.Instrument.TypeDefinition.Optioner.GetSupportedInstrumentOptions"/>
            <seealso cref="M:ISC.Instrument.TypeDefinition.Optioner.GetSupportedProfileOptions"/>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.GbProDefinition">
            <summary>
            The GBPro driver extends the GBPlus driver, adding commands
            needed for docking on the DS2, and for DataLogging.
            
            The "GBPro" driver is for use with Gas Badge Pro instruments.
            </summary>
            <remarks>
            
            In addition to the options defined in the <see cref="T:ISC.Instrument.TypeDefinition.GbPlusDefinition"/> base class,
            this instrument type also has the following options.
            <para>
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Operation">OptionGroup.Operation</see>...
            </para>
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term> <term>Description</term>                          <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>ALLON</term> <term/>              <term>Always on</term>                             <term/>    </item>
            <item> <term>Boolean</term>  <term>FCAL</term>  <term/>              <term>Allow field calibrating</term>               <term/>    </item>
            <item> <term>Boolean</term>  <term>FZERO</term> <term/>              <term>Allow field zeroing</term>                   <term/>    </item>  
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Operation">Alarms.Alarms</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term> <term>Description</term>                          <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>LATCH</term> <term/>              <term>Alarm latching</term>                        <term/>    </item>  
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.None">OptionGroup.None</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term> <term>Description</term>                          <term>Versions</term>
            </listheader>
            <item> <term>Multi</term>    <term>DPMOD</term>  <term/>              <term>Display modes</term>                        <term/>    </item>
            <item> <term/>               <term/>             <term>DTXT</term>    <term>Display text</term>                         <term/>    </item>
            <item> <term/>               <term/>             <term>DISPR</term>   <term>Display is numeric</term>                   <term/>    </item>
            <item> <term/>               <term/>             <term>CLOCK</term>   <term>Display clock</term>                        <term>2.00 or later</term>  </item>
            <item> <term>Boolean</term>  <term>CALDU</term> <term/>              <term>Enable Calibration Past Due warning</term>   <term/>    </item>
            <item> <term>Boolean</term>  <term>LCALB</term> <term/>              <term>Show next/last cal date on startup</term>    <term/>    </item>  
            <item> <term>Boolean</term>  <term>NCAL</term>  <term/>              <term>Enable display of next/last cal date on startup</term> <term/> </item>  
            </list>
            
            </remarks>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.GbPlusDefinition">
            <summary>
            For use with Gas Badge Plus instruments. Also serves as base class for <see cref="T:ISC.Instrument.TypeDefinition.GbProDefinition"/>.
            </summary>
            <remarks>
            
            Instrument options are as follows...
            <para>
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Operation">OptionGroup.Operation</see>...
            </para>
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term> <term>Description</term>                    <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>FBUMP</term>  <term/>              <term>Can bump in field</term>            <term>2.10 and later</term>    </item>  
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Admin">OptionGroup.Admin</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term> <term>Description</term>                    <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>CINDR</term>  <term/>              <term>Confidence indicator</term>         <term/>&gt;    </item> 
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.None">OptionGroup.None</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term> <term>Description</term>                    <term>Versions</term>
            </listheader>  
            <item> <term>Boolean</term>  <term>DISPR</term>  <term/>              <term>Display gas readings</term>         <term>GbPlus only, but not GBPro </term> </item>
            <item> <term>Boolean</term>  <term>BMPDU</term>  <term/>              <term>Enable Bump Past Due warning</term> <term>2.00 and later</term>    </item>
            </list>
            
            </remarks>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.GbPlusDefinition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.GbPlusDefinition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED BY THE InstrumentDriver.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.GbPlusDefinition.#ctor(System.String)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasSensorGasCodeConfigFeature(System.String)">
            <summary>
            Returns whether or not the sensor can be configured to detect different types
            of gases.  For example, changing the response factor of a PID sensor, or correlation
            factor of an LEL sensor.
            </summary>
            <param name="sensorCode">One of our standard sensor codes; e.g. "S0019".</param>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasSensorCalGasConfigFeature(System.String)">
            <summary>
            Indicates whether or not specified sensor type can have its calibration gas changed.
            </summary>
            <param name="sensorCode">One of our standard sensor codes "S0019" for example.</param>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxSensorCapacity">
            <summary>
            Retrieve the number of sensors the instrument is capable of holding.
            Always 1 for GBPlus
            </summary>
            <returns>Sensor capacity</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxCompanyLength">
            <summary>
            Returns maximum allowed length of the instrument's Active Company field.
            </summary>
            <returns>
            This instrument type does not have an Active Company field,
            so this property always returns zero.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasBacklightConfigFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MinBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 50 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxBumpThreshold">
            <summary>
            </summary>
            <returns>Always returns 99 (percent) for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasGasOperationsLogFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasAlarmEventsFeature">
            <summary>
            Always returns true for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasDataLoggingFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasDataLoggingTempFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasBaseInfoLogFeature">
            <summary>
            Always returns false for this instrument type.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasDualSenseFeature">
            <summary>
            Indicates whether or not the instrument type supports DualSense sensors.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasTotalRunTimeFeature">
            <summary>
            </summary>
            <returns>
            Always returns true for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasTotalAlarmTimeFeature">
            <summary>
            Indicates whether or not the instrument maintains a total alarm time.
            </summary>
            <remarks>
            Basically, this is used to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/> method.
            </remarks>
            <returns>Always returns true for this instrument type.</returns>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.getTotalAlarmTime"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.SupportedSecurityCodeTypes">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasSensorDisablingFeature">
            <summary>
            
            </summary>
            <returns>Always returns false. Sensors in this instrument type cannot be
            enabled or disabled; they're always enabled</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.RecordingIntervalIncrement">
            <summary>
            Get the increment that is allowed for recording interval
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxBatteryBarCount">
            <summary>
            Return the number of battery bars this instrument has
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasBacklightTimeoutConfigFeature">
            <summary>
            Indicates whether or not backlight timeout can be configured for the instrument.
            </summary>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MinBacklightTimeout">
            <summary>
            Get instrument's minimum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxBacklightTimeout">
            <summary>
            Get instrument's maximum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.SupportedBacklightOptions">
            <summary>
            Returns a list of backlight options that this instrument is capable of.
            </summary>
            <returns>
            The returned list contains <see cref="T:ISC.Instrument.TypeDefinition.BackLightOption"/> enums.
            For this instrument type, the list always only contains <see cref="F:ISC.Instrument.TypeDefinition.BackLightOption.Timed"/>.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.SupportedLanguages">
            <summary>
            Returns the languages that the instrument is capable of supporting.
            </summary>
            <returns>For this instrument, the returned languages are always English, French, German, and Spanish.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasBluetoothFeature">
            <summary>
            Indicates whether or not the instrument has a bluetooth capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's bluetooth methods.
            e.g. getBluetoothMacAddress, etc.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasWirelessFeature">
            <summary>
            Indicates whether or not the instrument has a wireless capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's wireless methods.
            e.g. getWirelessMacAddress, getWirelessTransmissionInterval, etc.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasWirelessTransmissionIntervalConfigFeature">
            <summary>
             Indicates whether or not the instrument's Wireless Transmission Interval setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessTransmissionInterval(System.Int32)"/> method. 
            </remarks>
            <seealso cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessTransmissionInterval(System.Int32)"/>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasWirelessNetworkDisconnectDelayConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Network Disconnect Delay Config Feature
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessNetworkDisconnectDelay(System.Int32)"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasWirelessBindingTimeoutConfigFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Script Binding Timeout setting can be changed.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.setWirelessBindingTimeout(System.Int32)"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasWirelessAlarmMaskFeature">
            <summary>
            Indicates whether or not the instrument's Wireless Alarm Mask setting is supported
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's
            <see cref="M:ISC.Instrument.Driver.InstrumentDriver.getWirelessAlarmMask"/> method.
            </remarks>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasWirelessListeningPostChannelMaskFeature">
            <summary>
            Indicates whether or not the instrument's Listening Post Channel Mask setting is supported.
            </summary>
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasGpsFeature">
            <summary>
            Indicates whether or not the instrument has GPS capability.
            </summary>
            <remarks>
            Use this property to determine if it's safe to call the driver's GPS methods.
            e.g. getGpsReadingInterval, etc.
            </remarks>	
            <returns>Always returns false for this instrument type.</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MinGpsReadingInterval">
            <summary>
            Returns the instrument's minimum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxGpsReadingInterval">
            <summary>
            Returns the instrument's maximum allowed GPS reading interval.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxCompanyMessageLines">
            <summary>
            Returns maximum number of lines that the "company message" can be.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxCompanyMessageLineLength">
            <summary>
            Returns the maximum number of characters that each line of the "company message" can be.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxAlarmActionMessages">
            <summary>
            If the instrument is capable of displaying text messages when a particular sensor type goes into alarm,
            then this value indicates the number of these messages that the instrument can store.
            </summary>
            <returns>
            Always returns zero for this instrument type.
            </returns>
            <seealso cref="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxAlarmActionMessageLines"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxAlarmActionMessageLineLength"/>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxAlarmActionMessageLines">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of text lines allowed in each message.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxAlarmActionMessageLineLength"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxAlarmActionMessageLineLength">
            <summary>
            If the instrument is capable of displaying a text message when a particular sensor type goes into alarm,
            then this value indicates the maximum number of characters allowed in each line of a text.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxAlarmActionMessages"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxAlarmActionMessageLines"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasOomWarningIntervalConfigFeature">
            <summary>
            Indicates if the instrument has an OOM ("Out-of-Motion") warning interval.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MinOomWarningInterval">
            <summary>
            Returns the instrument's minimum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasOomWarningIntervalConfigFeature"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxOomWarningInterval">
            <summary>
            Returns the instrument's maximum allowed OOM ("Out-of-Motion") Warning interval, in seconds.
            </summary>
            <seealso cref="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasOomWarningIntervalConfigFeature"/>
            <seealso cref="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MinOomWarningInterval"/>
            <exception cref="T:System.NotSupportedException">Always thrown for this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasDockIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "dock interval" that can be changed.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MinDockInterval">
            <summary>
            Returns the instrument's minimum allowed docking interval, in days.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxDockInterval">
            <summary>
            Returns the instrument's maximum allowed docking interval, in days.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.HasMaintenanceIndicatorIntervalConfigFeature">
            <summary>
            Indicates whether or not the instrument has a "maintenance indicator interval" that can be changed.
            </summary>
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MinMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's minimum allowed maintenace indicator interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbPlusDefinition.MaxMaintenanceIndicatorInterval">
            <summary>
            Returns the instrument's maximum allowed maintenace interval, in minutes.
            </summary>
            <exception cref="T:System.NotSupportedException">Always thrown by this instrument type.</exception>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.GbProDefinition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.GbProDefinition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED BY THE InstrumentDriver.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.GbProDefinition.#ctor(System.String)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbProDefinition.HasTotalRunTimeFeature">
            <returns>
            Always returns false for this instrument type.
            </returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbProDefinition.RecordingIntervalIncrement">
            <summary>
            Get the increment that is allowed for recording interval
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbProDefinition.HasBacklightTimeoutConfigFeature">
            <summary>
            Indicates whether or not backlight timeout can be configured for the instrument.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbProDefinition.MinBacklightTimeout">
            <summary>
            Get instrument's minimum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="P:ISC.Instrument.TypeDefinition.GbProDefinition.MaxBacklightTimeout">
            <summary>
            Get instrument's maximum allowed backlight timeout duration in seconds.
            </summary>
            <returns>Timeout in seconds</returns>
        </member>
        <member name="T:ISC.Instrument.TypeDefinition.VentisProFactoryDefinition">
            <summary>
            "Factory" type definitions for the Ventis Pro multigas instruments.
            All factory application software should use this class instead of the parent class.
            </summary>
            <remarks>
            <note>
            THIS CLASS IS TEMPORARY.
            <para>
            THIS CLASS ONLY EXISTS IN ORDER TO PROVIDE ACCESS TO WIRELESS AND BLUETOOTH SETTINGS/OPTIONS TO FACTORY APPLICATIONS FOR VENTISPRO 1.0 INSTRUMENTS.
            (ALL FACTORY APPLICATION SOFTWARE SHOULD USE THIS CLASS, INSTEAD OF ITS PARENT CLASS.)
            </para>
            <para>
            WIRELESS AND BLUETOOTH SHOULD NOT BE ACCESSIBLE TO OTHER APPLICATIONS IF THE VERSION IS 1.0, SINCE THAT FUNCTIONALITY HAS BEEN RELEASED ONLY FROM v2.0
            </para>
            <para>
            IN THE FUTURE, WE WILL RESTRUCTURE THE CODE TO USE VENTISPRO DEFINITION ITSELF, TO SUPPORT FACTORY SOFTWARE MINIMUM VERSION (<see cref="T:ISC.Instrument.TypeDefinition.VentisProDefinition"/>).
            </para>
            </note>
            In addition to the options provided in the parent (<see cref="T:ISC.Instrument.TypeDefinition.VentisProDefinition"/> class,
            this class provides the following additional options...
            <para>
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Bluetooth">OptionGroup.Bluetooth</see>...
            </para>
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                             <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>BLE</term>    <term/>               <term>Enable bluetooth</term>                        <term/>     </item>
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.Wireless">OptionGroup.Wireless</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                             <term>Versions</term>
            </listheader>
            <item> <term>Boolean</term>  <term>DWL</term>    <term/>               <term>Enable wireless screen</term>                  <term/>     </item>
            <item> <term>Boolean</term>  <term>WLNL</term>   <term/>               <term>Enable wireless "network lost" warning</term>  <term/>     </item>
            <item> <term>Boolean</term>  <term>WLPL</term>   <term/>               <term>Enable wireless "peer lost" warning</term>     <term/>     </item>
            <item> <term>Boolean</term>  <term>WLLP</term>   <term/>               <term>Enable wireless "last peer" warning</term>     <term/>     </item>
            </list>
            
            <see cref="F:ISC.Instrument.TypeDefinition.OptionGroup.WirelessModule">OptionGroup.WirelessModule</see>...
            <list type="table">
            <listheader>
                   <term>Type</term>     <term>Code</term>   <term>SubCode</term>  <term>Description</term>                             <term>Versions</term>
            </listheader>
            <item> <term>Multi</term>    <term>W</term>      <term/>               <term>Wireless</term>                                <term/>         </item>
            <item> <term/>               <term/>             <term>WO</term>       <term>Off</term>                                     <term/>         </item>
            <item> <term/>               <term/>             <term>WL</term>       <term>Local</term>                                   <term/>         </item>   
            <item> <term/>               <term/>             <term>WLC</term>      <term>Local and Cloud</term>                         <term>3.0</term></item> 
            <item> <term>Boolean</term>  <term>WLCC</term>   <term/>               <term>Enable wireless custom encryption</term>       <term/>         </item>
            </list>
            </remarks>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.VentisProFactoryDefinition.#ctor">
            <summary>
            Creates an instance with the maximum software version possible.
            </summary>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.VentisProFactoryDefinition.#ctor(ISC.Instrument.TypeDefinition.SoftwareVersionCallback,ISC.Instrument.TypeDefinition.EquipmentSubTypeCallback)">
            <summary>
            THIS CONSTRUCTOR IS INTENDED TO ONLY BE CALLED BY THE BY InstrumentDriver.
            </summary>
            <param name="softwareVersionCallback">Callback that will return the instrument's software version.</param>
            <param name="softwareVersionCallback">Callback that will return the instrument's sub-type.</param>
            <exclude/>
        </member>
        <member name="M:ISC.Instrument.TypeDefinition.VentisProFactoryDefinition.#ctor(System.String,ISC.Instrument.TypeDefinition.EquipmentSubType)">
            <summary>
            </summary>
            <param name="softwareVersion">The instrument's software version.</param>
            <param name="equipmentSubType">The instrument's sub-type.</param>
        </member>
    </members>
</doc>
